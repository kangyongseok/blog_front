{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.3ddbc6f4bf6d85375036.hot-update.js","sources":["webpack:///./components/CommonUI/Layout.tsx","webpack:///./lib/api/apis.ts","webpack:///./store/modules/index.ts","webpack:///./store/modules/loginAsync/actions.ts","webpack:///./store/modules/loginAsync/index.ts","webpack:///./store/modules/loginAsync/reducers.ts"],"sourcesContent":["/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getIsLogged } from '../../store/modules/loginUI';\r\n\r\nexport default function Layout(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(props.token) {\r\n      dispatch(getIsLogged(true))\r\n    } else {\r\n      dispatch(getIsLogged(false))\r\n    }\r\n  }, [props])\r\n  return (\r\n    <div\r\n      css={css`\r\n      width: 100%;\r\n      /* padding: 0 3%; */\r\n      // padding-bottom: 100px;\r\n      margin: 0 auto;\r\n    `}\r\n    className=\"page-layout\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n};","import { Post, PutPostType } from './../../store/modules/post/types';\r\nimport { firebaseDB } from '../../configs/init-firebase';\r\n\r\nconst db = firebaseDB().firestore();\r\nconst blogDB = db.collection(\"blogDB\");\r\n\r\nexport const GetPostsList = async <T>(cnt: number): Promise<T[]> => {\r\n\t// const user = firebase.auth().currentUser\r\n\tconst query = blogDB.where(\"id\", \"<=\", cnt).orderBy(\"id\", \"desc\");\r\n\tconst response: T[] = await query.get().then((querySnapshot) => {\r\n\t\t\treturn querySnapshot.docs.map((data) => {\r\n\t\t\t\tconst ele: T = { ...data.data(), id: data.id } as unknown as T;\r\n\t\t\t\treturn ele;\r\n\t\t\t});\r\n\t\t}).catch((e) =>  console.log(e)) as T[];\r\n\treturn response;\r\n};\r\n\r\nexport const PutPost = async ({post, id}: PutPostType) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.set(post).then((res) => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t});\r\n\treturn response.data;\r\n};\r\n\r\nexport const PostUpdate = async (data: Post) => {\r\n\tconst response: string = await blogDB.add(data)\r\n\t\t.then((res) => {\r\n\t\t\treturn res.id;\r\n\t\t}).catch((err) => {\r\n\t\t\treturn err;\r\n\t\t});\r\n\treturn response;\r\n};\r\n\r\nexport const GetPost = async (index: string) => {\r\n\tconst query = blogDB.doc(index);\r\n\tconst response = await query.get().then((doc) => {\r\n\t\treturn { \r\n\t\t\tres: { ...doc.data(), id: doc.id } as unknown as Post, \r\n\t\t\tresId: doc.id \r\n\t\t};\r\n\t});\r\n\treturn response;\t\r\n};\r\n\r\nexport const DeletePost = async (id: string) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.delete().then(() => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t})\r\n\treturn response;\r\n};\r\n\r\nexport type LoginType = {\r\n\tmessage: string;\r\n};\r\n","import { all } from 'redux-saga/effects';\r\nimport { combineReducers } from 'redux';\r\nimport postUI  from './postUI';\r\nimport { postSaga, updateSaga, getOnePostSaga, putSaga, deleteSaga } from './post';\r\nimport post from './post/reducers';\r\nimport loginUI from './loginUI';\r\nimport loginAsync from './loginAsync';\r\n\r\nconst rootReducer = combineReducers({\r\n  postUI,\r\n  post,\r\n  loginUI,\r\n  loginAsync,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport function* rootSaga() {\r\n  yield all([postSaga(), updateSaga(), getOnePostSaga(), putSaga(), deleteSaga()]);\r\n}","import { createAsyncAction } from 'typesafe-actions';\r\nimport { LoginAuth } from './types';\r\nimport { AxiosError } from 'axios';\r\n\r\nexport const GET_LOGIN = 'login/GET_LOGIN';\r\nexport const GET_LOGIN_SUCCESS = 'login/GET_LOGIN_SUCCESS';\r\nexport const GET_LOGIN_ERROR = 'login/GET_LOGIN_ERROR';\r\n\r\n\r\nexport const getLoginReqAsync = createAsyncAction(\r\n  GET_LOGIN,\r\n  GET_LOGIN_SUCCESS,\r\n  GET_LOGIN_ERROR,\r\n)<LoginAuth, string, AxiosError>();\r\n\r\n","export { default } from './reducers';\r\nexport * from './actions';\r\nexport * from './types';\r\nexport * from './saga';\r\n","import { handleAsyncActions } from './../../../lib/Utils/asyncUtils';\r\nimport { getLoginReqAsync } from './actions';\r\nimport { LoginState, LoginActions, updateKey } from './types';\r\nimport { createReducer } from 'typesafe-actions';\r\nimport { asyncState, transformToArray } from '../../../lib/Utils/asyncUtils';\r\n\r\nconst initialState: LoginState = {\r\n  email: '',\r\n  password: '',\r\n  reqLogin: asyncState.initial(),\r\n};\r\n\r\nconst login = createReducer<LoginState, LoginActions>(\r\n  initialState,\r\n).handleAction(\r\n  transformToArray(getLoginReqAsync),\r\n  handleAsyncActions(getLoginReqAsync, 'reqLogin'),\r\n);\r\nexport default login;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AAQA;AAPA;AAWA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAFA;AADA;AAKA;AARA;AACA;AADA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AADA;AAGA;AALA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAIA;AALA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAFA;AAHA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AADA;AAGA;AALA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAGA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}