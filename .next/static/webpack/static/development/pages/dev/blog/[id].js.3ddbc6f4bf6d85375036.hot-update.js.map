{"version":3,"file":"static/webpack/static\\development\\pages\\dev\\blog\\[id].js.3ddbc6f4bf6d85375036.hot-update.js","sources":["webpack:///./components/CommonUI/Hamburger.tsx","webpack:///./components/CommonUI/Header.tsx","webpack:///./components/Write/Head.tsx","webpack:///./containers/Header/HeaderContainer.tsx","webpack:///./lib/Utils/utils.ts","webpack:///./lib/api/apis.ts"],"sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { breakpoints } from '../../lib/styles/responsive';\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ninterface HamburgerProps {\r\n  toggle: boolean;\r\n  onToggle: () => void;\r\n}\r\nexport default function Hamburger({ toggle, onToggle }: HamburgerProps) {\r\n  return (\r\n    <BurgerIcon\r\n      colors={colors}\r\n      breakpoints={breakpoints}\r\n      toggle={toggle}\r\n      onClick={onToggle}\r\n    >\r\n      <div className=\"burger-line\" />\r\n      <div className=\"burger-line\" />\r\n      <div className=\"burger-line\" />\r\n    </BurgerIcon>\r\n  );\r\n}\r\n\r\nconst BurgerIcon = styled.button<{\r\n  colors: object;\r\n  breakpoints: object;\r\n  toggle: boolean;\r\n}>`\r\n  position: fixed;\r\n  top: 2rem;\r\n  right: 5rem;\r\n  width: 5rem;\r\n  height: 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${colors.defaultBlack};\r\n  opacity: 0.8;\r\n  z-index: 900;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.violet9};\r\n  }\r\n  transition: all 500ms;\r\n  transform: ${props =>\r\n    props.toggle ? 'translateX(-35rem) rotate(180deg)' : 'translateX(0rem)'};\r\n  background-color: ${props => props.toggle && colors.violet9};\r\n  .burger-line {\r\n    ${props => !props.toggle\r\n      ? css`\r\n      width: 3rem;\r\n      height: 0.4rem;\r\n      margin: 0.2rem 0;\r\n      `\r\n      : css`\r\n      width: 3rem;\r\n      height: 0.15rem;\r\n      margin: 0;\r\n      `\r\n    };\r\n    transition: ease-in 500ms;\r\n    background-color: white;\r\n  }\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    transform: unset;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { colors } from '../../lib/styles/global';\r\nimport Hamburger from './Hamburger';\r\nimport { breakpoints } from '../../lib/styles/responsive';\r\nimport Maybe from '../Maybe/Maybe';\r\nimport router  from '../../routes';\r\n\r\ntype HeaderProps = {\r\n  handleToggle: () => void;\r\n  moveRouter: (url: string) => void;\r\n  toggle: boolean;\r\n  isLogged: boolean;\r\n}\r\nconst Header = ({ handleToggle, toggle, isLogged, moveRouter }: HeaderProps) => {\r\n  const { Link } = router;\r\n  return (\r\n    <>\r\n      <Wrapper aColor={colors.violet9} breakpoints={breakpoints}>\r\n        <div className=\"nav-box\">\r\n          <a href={ROUTES.home} className=\"blog-name\">\r\n            건망증 개발자 기록지\r\n          </a>\r\n          <SmallNav toggle={toggle}>\r\n            <a href={ROUTES.about}>\r\n              <span>About</span>\r\n            </a>\r\n          </SmallNav>\r\n          <Hamburger toggle={toggle} onToggle={handleToggle} />\r\n          <div className=\"nav\">\r\n            <Maybe isVisible={isLogged}>\r\n              <>\r\n                <a href={ROUTES.write}>write</a>\r\n              </>\r\n            </Maybe>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nconst Wrapper = styled.header<{ aColor: string; breakpoints: object }>`\r\n  width: calc(100% - 10rem);\r\n  height: 6rem;\r\n  padding-top: 10rem;\r\n  margin: auto;\r\n  border-bottom: 1px solid #ced4da;\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (max-width: ${breakpoints.medium}) {\r\n    width: 100%;\r\n  }\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    padding-top: 2rem;\r\n  }\r\n  .nav-box {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    @media screen and (max-width: ${breakpoints.medium}) {\r\n      width: 100%;\r\n      padding: 0 2rem;\r\n    }\r\n    .blog-name {\r\n      font-size: 2rem;\r\n      font-weight: 900;\r\n    }\r\n    .nav {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      a {\r\n        font-size: 2rem;\r\n        cursor: pointer;\r\n        color: ${props => props.aColor};\r\n        & + a {\r\n          margin-left: 1rem;\r\n        }\r\n      }\r\n      @media screen and (max-width: ${breakpoints.small}) {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavRouter = styled.div`\r\n\r\n`;\r\nconst SmallNav = styled.aside<{ toggle: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  visibility: ${props => (props.toggle ? 'visible' : 'hidden')};\r\n  position: fixed;\r\n  background-color: black;\r\n  opacity: 0.8;\r\n  width: 30rem;\r\n  height: 100%;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 888;\r\n  transition: all 500ms;\r\n  transform: ${props =>\r\n    props.toggle ? 'translateX(0rem)' : 'translateX(35rem)'};\r\n  padding-top: 20rem;\r\n  padding-left: 5rem;\r\n  a {\r\n    color: white !important;\r\n    width: 80%;\r\n    .bolg-category {\r\n      font-size: 2rem;\r\n      padding-left: 3rem;\r\n    }\r\n  }\r\n  font-size: 3rem;\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    transform: ${props => (props.toggle ? 'translateX()' : 'translateX(100%)')};\r\n    width: calc(100% - 5rem);\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport { colors } from '../../lib/styles/global';\r\nimport { FiArrowLeft, FiUpload } from 'react-icons/fi';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\n\r\ntype HeadProps = {\r\n\tpostWrite: {\r\n\t\ttitle: string;\r\n\t\tinputValue: string;\r\n\t\tmdValue: string;\r\n\t};\r\n\tonUpload: () => void;\r\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\treqImgUpload: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n};\r\n\r\nexport default React.memo(function Head({reqImgUpload, postWrite, onUpload, onChange }: HeadProps) {\r\n\tconst backLink = () => {\r\n\t\thistory.back();\r\n\t};\r\n\treturn (\r\n\t\t<Title>\r\n\t\t\t<FiArrowLeft onClick={backLink} className=\"svg-icon\" />\r\n\t\t\t<input placeholder=\"제목\" name=\"title\" onChange={onChange} value={postWrite.title} />\r\n\t\t\t<input type=\"file\" className=\"file-upload\" id=\"file-upload\" onChange={reqImgUpload} />\r\n\t\t\t<label htmlFor=\"file-upload\">\r\n\t\t\t\t<FiUpload className=\"svg-icon\" />\r\n\t\t\t</label>\r\n\t\t\t<button type=\"button\" onClick={onUpload}>\r\n\t\t\t\t작성하기\r\n\t\t\t</button>\r\n\t\t</Title>\r\n\t);\r\n});\r\n\r\nconst Title = styled.div`\r\n\twidth: 100%;\r\n\tbackground-color: ${colors.defaultBlack};\r\n\theight: 7rem;\r\n\tbutton {\r\n\t\twidth: 8rem;\r\n\t\theight: 3.4rem;\r\n\t\tmargin-top: 1.8rem;\r\n\t\tmargin-left: 1rem;\r\n\t\tbackground-color: ${colors.gray1};\r\n\t\tcolor: ${colors.defaultBlack};\r\n\t\tfont-size: 1.6rem;\r\n\t\tborder-radius: 4px;\r\n\t\tborder: 2px solid ${colors.gray1};\r\n\t}\r\n\t.file-upload {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.svg-icon {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 3rem;\r\n\t\tpadding-top: 2rem;\r\n\t\tpadding-left: 1rem;\r\n\t\tpadding-right: 1rem;\r\n\t\tcursor: pointer;\r\n\t}\r\n\tinput {\r\n\t\tbackground-color: ${colors.defaultBlack};\r\n\t\twidth: calc(100% - 22rem);\r\n\t\theight: 6rem;\r\n\t\tpadding: 0.5rem;\r\n\t\tfont-size: 3rem;\r\n\t\tcolor: #fff;\r\n\t}\r\n`;\r\n","import { useState, useCallback } from \"react\";\r\nimport { logoutFn, loginPopup } from \"../../lib/Utils/utils\";\r\nimport Header from \"../../components/CommonUI/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/modules\";\r\nimport { useRouter } from \"next/router\";\r\nimport { ROUTES } from \"../../lib/Routes/Routes\";\r\n\r\nconst HeaderContainer = () => {\r\n  const { isLogged } = useSelector((state: RootState) => ({\r\n    isLogged: state.loginUI.isLogged,\r\n  }))\r\n  const router = useRouter();\r\n  const [toggle, setToggle] = useState(false);\r\n  \r\n  const handleToggle = useCallback(() => {\r\n    setToggle(!toggle);\r\n  }, [toggle]);\r\n\r\n  const moveRouter = () => {\r\n    router.push(`${ROUTES.about}`, `${ROUTES.about}`);\r\n  };\r\n\r\n  return (\r\n    <Header \r\n      isLogged={isLogged} \r\n      toggle={toggle} \r\n      handleToggle={handleToggle}\r\n      moveRouter={moveRouter} \r\n    />\r\n  )\r\n}\r\nexport default HeaderContainer;","import firebase, { provider } from '../../configs/init-firebase';\r\n\r\nexport const formatDate = (dateData: string) => {\r\n  const formatted: Date = new Date(dateData);\r\n  const year: number = formatted.getFullYear();\r\n  let month: number | string = formatted.getMonth() + 1;\r\n  let day: number | string = formatted.getDate();\r\n  month = Number(month) < 10 ? `0${month}` : month;\r\n  day = Number(day) < 10 ? `0${day}` : day;\r\n\r\n  return `${year}년 ${month}월 ${day}일`;\r\n};  \r\n\r\nexport const setItem = (key: string, obj: object) => {\r\n  return sessionStorage.setItem(key, JSON.stringify(obj));\r\n};\r\n\r\nexport const getItem = (key: string) => {\r\n  return sessionStorage.getItem(JSON.parse(key));\r\n};\r\n\r\nexport const removeExp = (str: string) => {\r\n  const regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi\r\n  if(regExp.test(str)) {\r\n    const result = str.replace(regExp, '');\r\n    return result;\r\n  } return str;\r\n} \r\n\r\nexport const loginPopup = () => {\r\n  firebase.auth().signInWithPopup(provider).then(function(result) {\r\n    const token = JSON.stringify(result.credential.toJSON());\r\n    sessionStorage.setItem(\"idToken\", token);\r\n    return result.user\r\n  }).catch(function(error) {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The firebase.auth.AuthCredential type that was used.\r\n    const credential = error.credential;\r\n    // ...\r\n  });\r\n}\r\n\r\nexport const logoutFn = () => {\r\n  firebase.auth().signOut().then(function() {\r\n    // Sign-out successful.\r\n    sessionStorage.removeItem(\"idToken\");\r\n  }).catch(function(error) {\r\n    // An error happened.\r\n  });\r\n}\r\n\r\nexport const checkUser = async () => {\r\n  const user = await firebase.auth().currentUser;\r\n  return user;\r\n}\r\n\r\nexport const loginEmail = (email: string, password: string) => {\r\n  const result = firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((res) => {\r\n      const token = JSON.stringify(res.user);\r\n      sessionStorage.setItem(\"idToken\", token);\r\n      return res\r\n  }).catch(err =>  console.log(err));\r\n  return result;\r\n}","import { Post, PutPostType } from './../../store/modules/post/types';\r\nimport { firebaseDB } from '../../configs/init-firebase';\r\n\r\nconst db = firebaseDB().firestore();\r\nconst blogDB = db.collection(\"blogDB\");\r\n\r\nexport const GetPostsList = async <T>(cnt: number): Promise<T[]> => {\r\n\t// const user = firebase.auth().currentUser\r\n\tconst query = blogDB.where(\"id\", \"<=\", cnt).orderBy(\"id\", \"desc\");\r\n\tconst response: T[] = await query.get().then((querySnapshot) => {\r\n\t\t\treturn querySnapshot.docs.map((data) => {\r\n\t\t\t\tconst ele: T = { ...data.data(), id: data.id } as unknown as T;\r\n\t\t\t\treturn ele;\r\n\t\t\t});\r\n\t\t}).catch((e) =>  console.log(e)) as T[];\r\n\treturn response;\r\n};\r\n\r\nexport const PutPost = async ({post, id}: PutPostType) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.set(post).then((res) => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t});\r\n\treturn response.data;\r\n};\r\n\r\nexport const PostUpdate = async (data: Post) => {\r\n\tconst response: string = await blogDB.add(data)\r\n\t\t.then((res) => {\r\n\t\t\treturn res.id;\r\n\t\t}).catch((err) => {\r\n\t\t\treturn err;\r\n\t\t});\r\n\treturn response;\r\n};\r\n\r\nexport const GetPost = async (index: string) => {\r\n\tconst query = blogDB.doc(index);\r\n\tconst response = await query.get().then((doc) => {\r\n\t\treturn { \r\n\t\t\tres: { ...doc.data(), id: doc.id } as unknown as Post, \r\n\t\t\tresId: doc.id \r\n\t\t};\r\n\t});\r\n\treturn response;\t\r\n};\r\n\r\nexport const DeletePost = async (id: string) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.delete().then(() => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t})\r\n\treturn response;\r\n};\r\n\r\nexport type LoginType = {\r\n\tmessage: string;\r\n};\r\n"],"mappings":"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","sourceRoot":""}