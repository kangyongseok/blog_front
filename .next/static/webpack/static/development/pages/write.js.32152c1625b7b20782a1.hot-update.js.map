{"version":3,"file":"static/webpack/static\\development\\pages\\write.js.32152c1625b7b20782a1.hot-update.js","sources":["webpack:///./containers/Write/WriteContainer.tsx"],"sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Editor, Head, Preview } from '../../components/Write';\r\nimport { RootState } from '../../store/modules';\r\nimport { getValue, resetInputValue, addTagArr } from '../../store/modules/postUI';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { removeExp, checkUser, getItem } from '../../lib/Utils/utils';\r\nimport { AxiosError } from 'axios';\r\nimport { Post, postAsync } from '../../store/modules/post';\r\nimport { AsyncState } from '../../lib/Utils/asyncUtils';\r\nimport TagAndImg from '../../components/Write/TagAndImg';\r\nimport SubTitleInput from '../../components/Write/SubTItleInput';\r\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\r\n\r\ntype WriteContainerProps = {};\r\n\r\nconst WriteContainer = ({}: WriteContainerProps) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst mdRef = useRef<HTMLDivElement>();\r\n\tconst { postWrite, postsList } = useSelector((state: RootState) => ({\r\n\t\tpostWrite: state.postUI.postWrite,\r\n    postsList: state.post.postsList,\r\n\t}));\r\n\tconst router = useRouter();\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(e: React.ChangeEvent<any>) => {\r\n\t\t\tconst { value, name } = e.target;\r\n\t\t\tdispatch(getValue({ name, value }));\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n\r\n\tconst handleConv = useCallback(\r\n\t\t(html: string) => {\r\n\t\t\tdispatch(getValue({ name: 'mdValue', value: html }));\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n\r\n\tconst onUpload = useCallback(async () => {\r\n\t\tconst uploadDate = new Date().toISOString();\r\n\t\tconst { title, inputValue, mdValue, imgUrl, subTitle, tagArr} = postWrite\r\n\t\tconst withoutExp = removeExp(inputValue);\r\n\t\tconst dataForUpload: Post = {\r\n\t\t\ttitle: title,\r\n\t\t\trawContent: inputValue,\r\n\t\t\tcontent: withoutExp,\r\n\t\t\tcontentMd: mdValue,\r\n\t\t\tdate: uploadDate,\r\n\t\t\timgUrl: imgUrl,\r\n\t\t\tid: postsList.data[0].id + 1,\r\n       subTitle: subTitle,\r\n       tagArr: tagArr,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tdispatch(postAsync.request(dataForUpload));\r\n\t\t\tRouter.push(ROUTES.home, ROUTES.home, { shallow: true });\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t},[ dispatch, postWrite ]\r\n\t);\r\n\r\n\tconst checkLogin = () => {\r\n\t\tconst tokenObj = sessionStorage.getItem(\"idToken\");\r\n\t\tconsole.log(tokenObj)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckLogin();\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tmdRef.current.scrollTo(0, mdRef.current.scrollHeight);\r\n\t\t},\r\n\t\t[ postWrite.inputValue ]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tdispatch(resetInputValue());\r\n\t\t\tcheckUser();\r\n\t\t};\r\n\t}, []);\r\n\treturn (\r\n\t\t<EditBox>\r\n\t\t\t<EditPart>\r\n\t\t\t\t<EditorHeaderContainer \r\n          postWrite={postWrite}\r\n          onChange={handleChange}\r\n          onUpload={onUpload}\r\n        />\r\n\t\t\t\t<Editor inputValue={postWrite.inputValue} onChange={handleChange} />\r\n\t\t\t</EditPart>\r\n\t\t\t<Preview inputValue={postWrite.inputValue} mdRef={mdRef} onChange={handleConv} />\r\n\t\t</EditBox>\r\n\t);\r\n};\r\n\r\nexport default WriteContainer;\r\nconst EditBox = styled.div`\r\n\tdisplay: flex;\r\n\theight: 94rem;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst EditPart = styled.div`width: calc(50% - 1.6rem);`;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAHA;AAGA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AACA;AAMA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAHA;AAQA;AAEA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAJA;AAgBA;AACA;AAAA;AAAA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AADA;AAIA;AAEA;AAFA;AAOA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAhFA;AACA;AAoFA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}