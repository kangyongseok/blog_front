{"version":3,"file":"static\\development\\pages\\dev\\blog\\[id].js","sources":["webpack:///webpack/bootstrap","webpack:///./components/CommonUI/Button.tsx","webpack:///./components/CommonUI/CodeHighlighter.tsx","webpack:///./components/CommonUI/Footer.tsx","webpack:///./components/CommonUI/Hamburger.tsx","webpack:///./components/CommonUI/Header.tsx","webpack:///./components/CommonUI/RenderMarkdownView.tsx","webpack:///./components/CommonUI/Tag.tsx","webpack:///./components/Maybe/Maybe.tsx","webpack:///./components/Posts/PostView/PostContent.tsx","webpack:///./components/Posts/PostView/PostHeader.tsx","webpack:///./components/Posts/PostView/PostView.tsx","webpack:///./components/Posts/PostView/index.ts","webpack:///./components/Write/Editor.tsx","webpack:///./components/Write/Head.tsx","webpack:///./components/Write/Preview.tsx","webpack:///./components/Write/SubTItleInput.tsx","webpack:///./components/Write/TagAndImg.tsx","webpack:///./components/Write/index.ts","webpack:///./configs/awsconfig.ts","webpack:///./configs/init-firebase.ts","webpack:///./containers/BlogPost/BlogPostContainer.tsx","webpack:///./containers/Common/EditorHeaderContainer.tsx","webpack:///./containers/Edit/EditContainer.tsx","webpack:///./containers/Header/HeaderContainer.tsx","webpack:///./lib/Routes/Routes.ts","webpack:///./lib/Utils/S3.ts","webpack:///./lib/Utils/asyncUtils.ts","webpack:///./lib/Utils/createAsyncSaga.ts","webpack:///./lib/Utils/utils.ts","webpack:///./lib/api/apis.ts","webpack:///./lib/styles/AtomOneDark.ts","webpack:///./lib/styles/global.tsx","webpack:///./lib/styles/responsive.ts","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/dev/blog/.tsx","webpack:///./routes.js","webpack:///./store/modules/post/actions.ts","webpack:///./store/modules/post/index.ts","webpack:///./store/modules/post/reducers.ts","webpack:///./store/modules/post/saga.ts","webpack:///./store/modules/postUI.ts","webpack:///external \"aws-sdk\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"firebase/app\"","webpack:///external \"firebase/auth\"","webpack:///external \"firebase/firestore\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-icons/fi\"","webpack:///external \"react-markdown\"","webpack:///external \"react-redux\"","webpack:///external \"react-syntax-highlighter\"","webpack:///external \"redux-saga/effects\"","webpack:///external \"showdown\"","webpack:///external \"styled-components\"","webpack:///external \"typesafe-actions\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ReactNode } from 'react';\r\n\r\ntype ButtonType = {\r\n  size?: 'small' | 'medium' | 'large';\r\n  bgColor?: string;\r\n  width?: string | number;\r\n  onClick?: () => void;\r\n  children?: ReactNode | string;\r\n  type: 'button' | 'submit';\r\n};\r\n\r\nconst Button = ({\r\n  type,\r\n  children,\r\n  size,\r\n  bgColor,\r\n  width,\r\n  onClick,\r\n}: ButtonType) => (\r\n  <Wrapper\r\n    type={type}\r\n    size={size}\r\n    bgColor={bgColor}\r\n    width={width}\r\n    onClick={onClick}\r\n  >\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nconst Wrapper = styled.button<ButtonType>`\r\n  background-color: ${props => props.bgColor};\r\n  width: ${props => props.width};\r\n    ${props =>\r\n      props.size === 'small' &&\r\n      css`\r\n        height: 1.75rem;\r\n        font-size: 0.75rem;\r\n        padding: 0 0.875rem;\r\n      `};\r\n    ${props =>\r\n      props.size === 'medium' &&\r\n      css`\r\n        height: 2.5rem;\r\n        font-size: 1rem;\r\n        padding: 0 1rem;\r\n      `};\r\n    ${props =>\r\n      props.size === 'large' &&\r\n      css`\r\n        height: 3rem;\r\n        font-size: 1.125rem;\r\n        padding: 0 1.5rem;\r\n      `};\r\n`;\r\n\r\nexport default Button;\r\n","import SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport prismThemes from '../../lib/styles/prismThemes';\r\nimport atomOneDark from '../../lib/styles/AtomOneDark';\r\n\r\ntype CodeHighlighterProps = {\r\n  value: string;\r\n  language: string;\r\n  codeEl?: HTMLElement;\r\n}\r\nconst CodeHighlighter = ({ value, language }: CodeHighlighterProps) => {\r\n  return (\r\n    <SyntaxHighlighter language={language} style={atomOneDark}>\r\n      {value === undefined ? '' : value}\r\n    </SyntaxHighlighter>\r\n  );\r\n};\r\n\r\nexport default CodeHighlighter;","import styled from 'styled-components';\r\n\r\nconst Footer = () => {\r\n  return <FooterEle />\r\n};\r\n\r\nconst FooterEle = styled.footer`\r\n  width: 100%;\r\n  height: 10rem;\r\n`;\r\nexport default Footer;","import styled, { css } from 'styled-components';\r\nimport { breakpoints } from '../../lib/styles/responsive';\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ninterface HamburgerProps {\r\n  toggle: boolean;\r\n  onToggle: () => void;\r\n}\r\nexport default function Hamburger({ toggle, onToggle }: HamburgerProps) {\r\n  return (\r\n    <BurgerIcon\r\n      colors={colors}\r\n      breakpoints={breakpoints}\r\n      toggle={toggle}\r\n      onClick={onToggle}\r\n    >\r\n      <div className=\"burger-line\" />\r\n      <div className=\"burger-line\" />\r\n      <div className=\"burger-line\" />\r\n    </BurgerIcon>\r\n  );\r\n}\r\n\r\nconst BurgerIcon = styled.button<{\r\n  colors: object;\r\n  breakpoints: object;\r\n  toggle: boolean;\r\n}>`\r\n  position: fixed;\r\n  top: 2rem;\r\n  right: 5rem;\r\n  width: 5rem;\r\n  height: 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${colors.defaultBlack};\r\n  opacity: 0.8;\r\n  z-index: 900;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.violet9};\r\n  }\r\n  transition: all 500ms;\r\n  transform: ${props =>\r\n    props.toggle ? 'translateX(-35rem) rotate(180deg)' : 'translateX(0rem)'};\r\n  background-color: ${props => props.toggle && colors.violet9};\r\n  .burger-line {\r\n    ${props => !props.toggle\r\n      ? css`\r\n      width: 3rem;\r\n      height: 0.4rem;\r\n      margin: 0.2rem 0;\r\n      `\r\n      : css`\r\n      width: 3rem;\r\n      height: 0.15rem;\r\n      margin: 0;\r\n      `\r\n    };\r\n    transition: ease-in 500ms;\r\n    background-color: white;\r\n  }\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    transform: unset;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { colors } from '../../lib/styles/global';\r\nimport Hamburger from './Hamburger';\r\nimport { breakpoints } from '../../lib/styles/responsive';\r\nimport Maybe from '../Maybe/Maybe';\r\nimport router  from '../../routes';\r\n\r\ntype HeaderProps = {\r\n  handleToggle: () => void;\r\n  moveRouter: (url: string) => void;\r\n  toggle: boolean;\r\n  isLogged: boolean;\r\n}\r\nconst Header = ({ handleToggle, toggle, isLogged, moveRouter }: HeaderProps) => {\r\n  const { Link } = router;\r\n  return (\r\n    <>\r\n      <Wrapper aColor={colors.violet9} breakpoints={breakpoints}>\r\n        <div className=\"nav-box\">\r\n          <a href={ROUTES.home} className=\"blog-name\">\r\n            건망증 개발자 기록지\r\n          </a>\r\n          <SmallNav toggle={toggle}>\r\n            <a href={ROUTES.about}>\r\n              <span>About</span>\r\n            </a>\r\n          </SmallNav>\r\n          <Hamburger toggle={toggle} onToggle={handleToggle} />\r\n          <div className=\"nav\">\r\n            <Maybe isVisible={isLogged}>\r\n              <>\r\n                <a href={ROUTES.write}>write</a>\r\n              </>\r\n            </Maybe>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nconst Wrapper = styled.header<{ aColor: string; breakpoints: object }>`\r\n  width: calc(100% - 10rem);\r\n  height: 6rem;\r\n  padding-top: 10rem;\r\n  margin: auto;\r\n  border-bottom: 1px solid #ced4da;\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (max-width: ${breakpoints.medium}) {\r\n    width: 100%;\r\n  }\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    padding-top: 2rem;\r\n  }\r\n  .nav-box {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    @media screen and (max-width: ${breakpoints.medium}) {\r\n      width: 100%;\r\n      padding: 0 2rem;\r\n    }\r\n    .blog-name {\r\n      font-size: 2rem;\r\n      font-weight: 900;\r\n    }\r\n    .nav {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      a {\r\n        font-size: 2rem;\r\n        cursor: pointer;\r\n        color: ${props => props.aColor};\r\n        & + a {\r\n          margin-left: 1rem;\r\n        }\r\n      }\r\n      @media screen and (max-width: ${breakpoints.small}) {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavRouter = styled.div`\r\n\r\n`;\r\nconst SmallNav = styled.aside<{ toggle: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  visibility: ${props => (props.toggle ? 'visible' : 'hidden')};\r\n  position: fixed;\r\n  background-color: black;\r\n  opacity: 0.8;\r\n  width: 30rem;\r\n  height: 100%;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 888;\r\n  transition: all 500ms;\r\n  transform: ${props =>\r\n    props.toggle ? 'translateX(0rem)' : 'translateX(35rem)'};\r\n  padding-top: 20rem;\r\n  padding-left: 5rem;\r\n  a {\r\n    color: white !important;\r\n    width: 80%;\r\n    .bolg-category {\r\n      font-size: 2rem;\r\n      padding-left: 3rem;\r\n    }\r\n  }\r\n  font-size: 3rem;\r\n  @media screen and (max-width: ${breakpoints.small}) {\r\n    transform: ${props => (props.toggle ? 'translateX()' : 'translateX(100%)')};\r\n    width: calc(100% - 5rem);\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import ReactMarkdown from 'react-markdown';\r\nimport CodeHighlighter from './CodeHighlighter';\r\nimport '../../lib/styles/prism.css';\r\nimport '../../lib/styles/githubMarkdown.css';\r\ntype RenderMarkdownViewProps = {\r\n  html: string;\r\n}\r\nconst RenderMarkdownView = ({ html }: RenderMarkdownViewProps) => {\r\n  return (\r\n    <div className=\"markdown-body\">\r\n      <ReactMarkdown \r\n        source={html}\r\n        skipHtml={false}\r\n        escapeHtml={false}\r\n        renderers={{ \r\n          code: CodeHighlighter \r\n        }}\r\n      />\r\n    </div>\r\n)}\r\nRenderMarkdownView.defaultProps = {\r\n  html: '',\r\n}\r\n\r\nexport default RenderMarkdownView;","import styled from 'styled-components'\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ntype TagProps = {\r\n  tagString: string;\r\n}\r\nconst Tag = ({ tagString }: TagProps ) => (\r\n  <TagDiv>\r\n    <span>{tagString}</span>\r\n  </TagDiv>\r\n)\r\n\r\nconst TagDiv = styled.div`\r\n  border-radius: 1.6rem;\r\n  background-color: ${colors.gray4};\r\n  font-weight: 600;\r\n  margin: 0.5rem;\r\n  font-size: 1.4rem;\r\n  padding: 0.4rem 1rem;\r\n  line-height: 1.3;\r\n  height: 2rem;\r\n`\r\nexport default Tag;","import { ReactChildren, ReactFragment } from \"react\";\r\n\r\ntype MaybeProps = {\r\n  isVisible: any,\r\n  children: ReactChildren | JSX.Element | ReactFragment,\r\n}\r\nconst Maybe = ({ isVisible, children }: MaybeProps) => {\r\n  return <>\r\n  {isVisible && children}\r\n  </>\r\n};\r\nexport default Maybe;","import styled from 'styled-components';\r\nimport RenderMarkdownView from \"../../CommonUI/RenderMarkdownView\";\r\nimport Maybe from \"../../Maybe/Maybe\";\r\nimport { colors } from '../../../lib/styles/global';\r\n\r\ntype PostContentProps = {\r\n  title: string;\r\n  imgUrl: string;\r\n  rawContent: string;\r\n}\r\nconst PostContent = ({ title, imgUrl, rawContent }: PostContentProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <h1>{title}</h1>\r\n      <hr />\r\n      <main>\r\n        <Maybe isVisible={imgUrl}>\r\n          <img className=\"main-img\" src={imgUrl} alt=\"대표이미지\" />\r\n        </Maybe>\r\n        <RenderMarkdownView html={rawContent}/>\r\n      </main>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default PostContent;\r\n\r\nconst Wrapper = styled.article`\r\n  width: 100%;\r\n\tmain {\r\n\t\twidth: 90%;\r\n\t\tmargin: auto;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n    .main-img {\r\n      margin: auto;\r\n      padding-bottom: 4rem;\r\n      max-height: 50rem;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n  hr {\r\n    width: 100%;\r\n    border: 1px solid ${colors.gray5};\r\n    margin: 2rem 0;\r\n  }\r\n`","import { Dispatch, SetStateAction } from 'react';\r\nimport styled from 'styled-components';\r\nimport Maybe from \"../../Maybe/Maybe\";\r\nimport Button from \"../../CommonUI/Button\";\r\nimport { colors } from \"../../../lib/styles/global\";\r\nimport { formatDate } from \"../../../lib/Utils/utils\";\r\n\r\ntype PostHeaderProps = {\r\n  date: string;\r\n  isLogged: boolean;\r\n  id: string;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>; \r\n\treqDeletePost: () =>  void;\r\n}\r\nconst PostHeader = ({ \r\n  date, \r\n  isLogged, \r\n  id,\r\n  setEditMode, \r\n  reqDeletePost \r\n}: PostHeaderProps) => {\r\n  return (\r\n    <Wrapper className=\"reg-div\">\r\n\t\t  <span className=\"reg-date\">{formatDate(date)}</span>\r\n\t\t  <Maybe isVisible={isLogged}>\r\n\t\t  \t<div className=\"\">\r\n\t\t  \t\t<Button \r\n\t\t  \t\t\ttype=\"button\" \r\n\t\t  \t\t\tsize=\"medium\" \r\n\t\t  \t\t\tbgColor={colors.gray1} \r\n\t\t  \t\t\tonClick={() => setEditMode(true)}\r\n\t\t  \t\t>\r\n\t\t  \t\t\t수정\r\n\t\t  \t\t</Button>\r\n\t\t  \t\t<Button \r\n\t\t  \t\t\ttype=\"button\" \r\n\t\t  \t\t\tsize=\"medium\" \r\n\t\t  \t\t\tbgColor={colors.gray1} \r\n\t\t  \t\t\tonClick={() => reqDeletePost()}\r\n\t\t  \t\t>\r\n\t\t  \t\t\t삭제\r\n\t\t  \t\t</Button>\r\n\t\t  \t</div>\r\n\t\t  </Maybe>\r\n\t\t</Wrapper>\r\n  )\r\n}\r\n\r\nexport default PostHeader;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tbutton {\r\n\t\tfont-family: inherit;\r\n  }\r\n  .reg-date {\r\n    color: ${colors.gray5};\r\n  }\r\n`","import { Dispatch, SetStateAction } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AxiosError } from 'axios';\r\n\r\nimport { breakpoints } from '../../../lib/styles/responsive';\r\nimport { Post } from '../../../store/modules/post';\r\nimport { AsyncState } from '../../../lib/Utils/asyncUtils';\r\nimport { PostHeader, PostContent } from '.';\r\n\r\ntype PostViewProps = {\r\n  postData: AsyncState<{\r\n    res: Post;\r\n    resId: string;\r\n}, AxiosError<any>>;\r\n\teditMode: boolean;\r\n\tisLogged: boolean;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>; \r\n\treqDeletePost: () =>  void;\r\n};\r\n\r\nexport default function PostView({ \r\n\tpostData, \r\n\tisLogged, \r\n\tsetEditMode, \r\n\teditMode, \r\n\treqDeletePost \r\n}: PostViewProps) {\r\n\tconst { loading } = postData;\r\n\tconst { date, title, imgUrl, rawContent, id } = postData.data.res;\r\n\tif (loading) return null;\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<PostHeader\r\n\t\t\t\t\tdate={date} \r\n\t\t\t\t\tisLogged={isLogged}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tsetEditMode={setEditMode}\r\n\t\t\t\t\treqDeletePost={reqDeletePost}\r\n\t\t\t\t/>\r\n\t\t\t\t<PostContent\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\timgUrl={imgUrl}\r\n\t\t\t\t\trawContent={rawContent}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n\r\nconst Layout = styled.div`\r\n\twidth: calc(100% - 18rem);\r\n\tmargin: auto;\r\n\tmin-height: 70rem;\r\n\tpadding: 2rem;\r\n\tmargin-top: 20rem;\r\n\t@media screen and (max-width: ${breakpoints.large}) {\r\n\t\twidth: calc(100% - 4rem);\r\n\t}\r\n`;","export { default as PostContent } from './PostContent';\r\nexport { default as PostHeader  } from './PostHeader';\r\nexport { default as PostView } from './PostView';","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { string } from 'prop-types';\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ninterface EditorProps {\r\n\tinputValue: string;\r\n\tonChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n}\r\nexport default React.memo(function Editor({ inputValue, onChange }: EditorProps) {\r\n\treturn <TextArea onChange={onChange} value={inputValue} name=\"inputValue\" />;\r\n}, (preProps, nextProps) => preProps.inputValue === nextProps.inputValue);\r\n\r\nconst TextArea = styled.textarea`\r\n\twidth: calc(100% - 1.6rem);\r\n\theight: calc(100% - 1.6rem);\r\n\tfont-size: 1.6rem;\r\n\tpadding: 0.8rem;\r\n\tmargin-right: 1px;\r\n\tbackground-color: ${colors.gray9};\r\n\tcolor: #fff;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport { colors } from '../../lib/styles/global';\r\nimport { FiArrowLeft, FiUpload } from 'react-icons/fi';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\n\r\ntype HeadProps = {\r\n\tpostWrite: {\r\n\t\ttitle: string;\r\n\t\tinputValue: string;\r\n\t\tmdValue: string;\r\n\t};\r\n\tonUpload: () => void;\r\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\treqImgUpload: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n};\r\n\r\nexport default React.memo(function Head({reqImgUpload, postWrite, onUpload, onChange }: HeadProps) {\r\n\tconst backLink = () => {\r\n\t\thistory.back();\r\n\t};\r\n\treturn (\r\n\t\t<Title>\r\n\t\t\t<FiArrowLeft onClick={backLink} className=\"svg-icon\" />\r\n\t\t\t<input placeholder=\"제목\" name=\"title\" onChange={onChange} value={postWrite.title} />\r\n\t\t\t<input type=\"file\" className=\"file-upload\" id=\"file-upload\" onChange={reqImgUpload} />\r\n\t\t\t<label htmlFor=\"file-upload\">\r\n\t\t\t\t<FiUpload className=\"svg-icon\" />\r\n\t\t\t</label>\r\n\t\t\t<button type=\"button\" onClick={onUpload}>\r\n\t\t\t\t작성하기\r\n\t\t\t</button>\r\n\t\t</Title>\r\n\t);\r\n});\r\n\r\nconst Title = styled.div`\r\n\twidth: 100%;\r\n\tbackground-color: ${colors.defaultBlack};\r\n\theight: 7rem;\r\n\tbutton {\r\n\t\twidth: 8rem;\r\n\t\theight: 3.4rem;\r\n\t\tmargin-top: 1.8rem;\r\n\t\tmargin-left: 1rem;\r\n\t\tbackground-color: ${colors.gray1};\r\n\t\tcolor: ${colors.defaultBlack};\r\n\t\tfont-size: 1.6rem;\r\n\t\tborder-radius: 4px;\r\n\t\tborder: 2px solid ${colors.gray1};\r\n\t}\r\n\t.file-upload {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.svg-icon {\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 3rem;\r\n\t\tpadding-top: 2rem;\r\n\t\tpadding-left: 1rem;\r\n\t\tpadding-right: 1rem;\r\n\t\tcursor: pointer;\r\n\t}\r\n\tinput {\r\n\t\tbackground-color: ${colors.defaultBlack};\r\n\t\twidth: calc(100% - 22rem);\r\n\t\theight: 6rem;\r\n\t\tpadding: 0.5rem;\r\n\t\tfont-size: 3rem;\r\n\t\tcolor: #fff;\r\n\t}\r\n`;\r\n","import { useEffect, createRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport showdown from 'showdown';\r\nimport '../../lib/styles/githubMarkdown.css';\r\nimport RenderMarkdownView from '../CommonUI/RenderMarkdownView';\r\n\r\ninterface PreviewProps {\r\n  inputValue: string;\r\n  onChange: (html: string) => void;\r\n  mdRef: React.RefObject<HTMLDivElement>;\r\n}\r\nexport default function Preview({ inputValue, mdRef, onChange }: PreviewProps) {\r\n  const converter = new showdown.Converter();\r\n  const html = converter.makeHtml(inputValue);\r\n  useEffect(() => {\r\n    onChange(html);\r\n  }, [html]);\r\n\r\n \r\n  return (\r\n    <>\r\n      <Wrapper ref={mdRef}>\r\n      <RenderMarkdownView html={inputValue} /> \r\n      </Wrapper>\r\n  </>);\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 3rem 1rem;\r\n  width: calc(50% - 2rem);\r\n  background-color: white;\r\n  overflow-y: scroll;\r\n  word-break: break-all;\r\n  white-space: normal;\r\n  margin-left: 1px;\r\n  line-height: 1.4;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { colors } from '../../lib/styles/global';\r\n\r\ntype SubTitleProps = {\r\n  subTitle: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nconst SubTitleInput = ({ subTitle, onChange }: SubTitleProps) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n      <input \r\n        name=\"subTitle\"\r\n        value={subTitle}\r\n        onChange={onChange}\r\n        placeholder=\"부제를 입력하세요\"\r\n        type=\"text\"\r\n      />\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default SubTitleInput;\r\n\r\nconst Wrapper = styled.div`\r\n\twidth: 100%;\r\n\theight: 4rem;\r\n\tbackground-color: ${colors.gray5};\r\n\tinput {\r\n\t\twidth: calc(100% - 1.6rem);\r\n\t\theight: calc(100% - 1.6rem);\r\n\t\tbackground-color: inherit;\r\n\t\tpadding: 0.8rem;\r\n\t\tfont-size: 2rem;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\nimport { FiImage } from 'react-icons/fi';\r\nimport Tag from '../CommonUI/Tag';\r\n\r\ntype TagAndImg = {\r\n\treqGetImgUrl: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\ttag: string;\r\n\ttagArr: string[];\r\n\tonChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\tonAddTag: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n};\r\nconst TagAndImg = ({ reqGetImgUrl, tag, tagArr, onChange, onAddTag }: TagAndImg) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n      {tagArr.map((tagEle, index) => (\r\n        <Tag key={`${tagEle}_${index}`} tagString={tagEle} />\r\n      ))}\r\n      <input \r\n        className=\"tag-input\" \r\n        placeholder=\"태그를 입력하세요\" \r\n        name=\"tag\"\r\n        value={tag}\r\n        onChange={onChange} \r\n        onKeyUp={onAddTag} \r\n      />\r\n      <input \r\n        type=\"file\" \r\n        className=\"img-upload\" \r\n        id=\"img-upload\" \r\n        onChange={reqGetImgUrl} \r\n      />\r\n\t\t\t<label htmlFor=\"img-upload\">\r\n\t\t\t\t<FiImage className=\"svg-icon\" />\r\n\t\t\t</label>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n\twidth: 100%;\r\n\theight: 5rem;\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\t.tag-input {\r\n\t\theight: 4rem;\r\n\t\tpadding: 0.5rem;\r\n\t\tfont-size: 2rem;\r\n\t}\r\n\t.img-upload {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.svg-icon {\r\n\t\tposition: absolute;\r\n\t\tright: 0rem;\r\n\t\tfont-size: 3rem;\r\n\t\tpadding-top: 1rem;\r\n\t\tpadding-left: 1rem;\r\n\t\tpadding-right: 1.8rem;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nexport default TagAndImg;\r\n","export { default as Editor } from './Editor';\r\nexport { default as Head } from './Head';\r\nexport { default as Preview } from'./Preview';","export const AWSConfig = {\r\n\talbumBucketName: 'blog-oscar',\r\n\tbucketRegion: 'ap-northeast-2',\r\n\tIdentityPoolId: 'ap-northeast-2:df63c109-29c3-46e1-8598-a4693415589d',\r\n}","import * as firebase from  'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBLXvVQTnFPYwECmKot63Ww0nTElbPDyfQ\",\r\n  authDomain: \"myblog-672d0.firebaseapp.com\",\r\n  databaseURL: \"https://myblog-672d0.firebaseio.com\",\r\n  projectId: \"myblog-672d0\",\r\n  storageBucket: \"myblog-672d0.appspot.com\",\r\n  messagingSenderId: \"899979036711\",\r\n  appId: \"1:899979036711:web:cd2980d7e7741bc55a6602\",\r\n  measurementId: \"G-B068HWHPHP\"\r\n}\r\nexport function firebaseDB() {\r\n  // Initialize Firebase\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    // firebase.analytics();\r\n  }\r\n  return firebase;\r\n}\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useCallback, Dispatch, SetStateAction } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport PostView from '../../components/Posts/PostView/PostView';\r\nimport { getPostAsync, Post, deletePostAsync } from '../../store/modules/post';\r\nimport Footer from '../../components/CommonUI/Footer';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport HeaderContainer from '../Header/HeaderContainer';\r\nimport { RootState } from '../../store/modules';\r\nimport { setInputValues } from '../../store/modules/postUI';\r\n\r\ntype BlogPostProps = {\r\n  editMode: boolean;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>; \r\n};\r\nconst BlogPostContainer = ({ editMode, setEditMode }: BlogPostProps) => {\r\n  const dispatch = useDispatch();\r\n  const { postData, isLogged } = useSelector(( state : RootState ) => ({\r\n    postData: state.post.post,\r\n    isLogged: state.loginUI.isLogged\r\n  }))\r\n  const router = useRouter();\r\n\r\n  const reqDeletePost = useCallback(() => {\r\n    try {\r\n      dispatch(deletePostAsync.request(postData.data.resId));\r\n      // router ? Link .. ssr제대로 파악해서 routing\r\n      router.back();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <PostView \r\n        isLogged={isLogged} \r\n        reqDeletePost={reqDeletePost} \r\n        postData={postData} \r\n        editMode={editMode} \r\n        setEditMode={setEditMode} \r\n      />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogPostContainer;","import { useCallback } from \"react\";\r\nimport { AxiosError } from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PostWrite, getValue, addTagArr } from \"../../store/modules/postUI\";\r\nimport { AsyncState } from \"../../lib/Utils/asyncUtils\";\r\nimport { Post } from \"../../store/modules/post\";\r\nimport { Head } from \"../../components/Write\";\r\nimport SubTitleInput from \"../../components/Write/SubTItleInput\";\r\nimport TagAndImg from '../../components/Write/TagAndImg';\r\nimport { addPhoto } from \"../../lib/Utils/S3\";\r\n\r\n\r\ntype EditorHeaderProps = {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  postWrite: PostWrite;\r\n  onUpload: () => void;\r\n}\r\nconst EditorHeaderContainer = ({ onChange, postWrite, onUpload }: EditorHeaderProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTags = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if(e.keyCode === 188 && postWrite.tag !== ',') {\r\n      dispatch(addTagArr());\r\n    }\r\n  }, [dispatch, postWrite.tag]);\r\n  \r\n  const reqImgUpload = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const bucketData: string | void = await addPhoto(e);\r\n    if (typeof bucketData === 'string') {\r\n      dispatch(getValue({ name: 'imgUrl', value: bucketData }));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const reqGetImgUrl = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const bucketData: string | void = await addPhoto(e);\r\n    if (typeof bucketData === 'string') {\r\n      const imgMarkdown = `![](${bucketData})`;\r\n      dispatch(getValue({ name: 'inputValue', value: imgMarkdown }));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Head onUpload={onUpload} postWrite={postWrite} onChange={onChange} reqImgUpload={reqImgUpload} />\r\n      <SubTitleInput subTitle={postWrite.subTitle} onChange={onChange} />\r\n      <TagAndImg\r\n        reqGetImgUrl={reqGetImgUrl}\r\n        tag={postWrite.tag}\r\n        tagArr={postWrite.tagArr}\r\n        onChange={onChange}\r\n        onAddTag={handleTags}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditorHeaderContainer;","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Editor, Preview } from '../../components/Write';\r\nimport { RootState } from '../../store/modules';\r\nimport { getValue, resetInputValue, setInputValues, } from '../../store/modules/postUI';\r\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\r\nimport { putPostAsync, Post } from '../../store/modules/post';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { removeExp } from '../../lib/Utils/utils';\r\n\r\ntype EditContainerProps = {\r\n  editMode: boolean;\r\n};\r\n\r\nconst EditContainer = ({ editMode }: EditContainerProps) => {\r\n  const dispatch = useDispatch();\r\n  const { postWrite, post } = useSelector((state: RootState) => ({\r\n    postWrite: state.postUI.postWrite,\r\n    post: state.post.post,\r\n  }))\r\n  const router = useRouter();\r\n  const mdRef = useRef<HTMLDivElement>();\r\n\r\n  const handleChange = useCallback((e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    dispatch(getValue({ name, value }));\r\n  }, [dispatch]);\r\n\r\n  const handleConv = useCallback((html: string) => {\r\n    dispatch(getValue({ name: 'mdValue', value: html}));\r\n  }, [dispatch]);\r\n\r\n  const onUpload = useCallback(() => {\r\n    const { title, inputValue, mdValue, imgUrl, subTitle, tagArr} = postWrite\r\n    const { res, resId } = post.data;\r\n    const uploadDate = new Date().toISOString();\r\n    const withoutExp = removeExp(inputValue);\r\n    const dataForUpload:Post = {\r\n      title: title,\r\n      rawContent: inputValue,\r\n      content: withoutExp,\r\n      contentMd: mdValue,\r\n      date: uploadDate,\r\n      imgUrl: imgUrl,\r\n      id: res.id,\r\n  \t\tsubTitle: subTitle,\r\n      tagArr: tagArr,\r\n    }\r\n    dispatch(putPostAsync.request({post: dataForUpload, id: resId}));\r\n    router.push(ROUTES.home, ROUTES.home, { shallow: true });\r\n  }, [dispatch, postWrite]);\r\n  \r\n\r\n  useEffect(() => {\r\n    mdRef.current.scrollTo(0, mdRef.current.scrollHeight);\r\n  }, [postWrite.inputValue])\r\n\r\n  useEffect(() => {\r\n    const { rawContent, contentMd, imgUrl, title, subTitle, tagArr } = post.data.res\r\n    dispatch(setInputValues({\r\n      title,\r\n      inputValue: rawContent,\r\n      mdValue:contentMd,\r\n      imgUrl, \r\n      subTitle,\r\n      tagArr,\r\n      tag: '', \r\n    }));\r\n    return () => {\r\n      dispatch(resetInputValue());\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <EditBox>\r\n        <EditPart>\r\n          <EditorHeaderContainer \r\n            postWrite={postWrite}\r\n            onChange={handleChange}\r\n            onUpload={onUpload}\r\n          />\r\n          <Editor inputValue={postWrite.inputValue} onChange={handleChange} />\r\n        </EditPart>\r\n        <Preview inputValue={postWrite.inputValue} mdRef={mdRef} onChange={handleConv} />\r\n\t\t  </EditBox>\r\n    </>\r\n  ); \r\n}\r\n\r\nexport default EditContainer;\r\nconst EditBox = styled.div`\r\n\tdisplay: flex;\r\n\theight: 94rem;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst EditPart = styled.div`width: calc(50% - 1.6rem);`;","import { useState, useCallback } from \"react\";\r\nimport { logoutFn, loginPopup } from \"../../lib/Utils/utils\";\r\nimport Header from \"../../components/CommonUI/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/modules\";\r\nimport { useRouter } from \"next/router\";\r\nimport { ROUTES } from \"../../lib/Routes/Routes\";\r\n\r\nconst HeaderContainer = () => {\r\n  const { isLogged } = useSelector((state: RootState) => ({\r\n    isLogged: state.loginUI.isLogged,\r\n  }))\r\n  const router = useRouter();\r\n  const [toggle, setToggle] = useState(false);\r\n  \r\n  const handleToggle = useCallback(() => {\r\n    setToggle(!toggle);\r\n  }, [toggle]);\r\n\r\n  const moveRouter = () => {\r\n    router.push(`${ROUTES.about}`, `${ROUTES.about}`);\r\n  };\r\n\r\n  return (\r\n    <Header \r\n      isLogged={isLogged} \r\n      toggle={toggle} \r\n      handleToggle={handleToggle}\r\n      moveRouter={moveRouter} \r\n    />\r\n  )\r\n}\r\nexport default HeaderContainer;","export const ROUTES = {\r\n  about: '/about',\r\n  home: '/',\r\n  devBlog: '/dev/blog',\r\n  editBlog: '/dev/edit',\r\n  write: '/write',\r\n}\r\n\r\nexport enum PATH {\r\n  ABOUT = 'about',\r\n  HOME = 'home',\r\n  DEV_BLOG = 'devBlog',\r\n  EDIT_BLOG = 'editBlog',\r\n  WRITE = 'write',\r\n}","import AWS from 'aws-sdk';\r\nimport { AWSConfig } from '../../configs/awsconfig';\r\n\r\nconst { albumBucketName, bucketRegion, IdentityPoolId } = AWSConfig\r\nconst paramKey = 'blog-oscar/images/';\r\n\r\nAWS.config.region = bucketRegion; // 리전\r\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n\tIdentityPoolId: IdentityPoolId\r\n});\r\nAWS.config.update({\r\n\tregion: bucketRegion,\r\n\tcredentials: new AWS.CognitoIdentityCredentials({\r\n\t\tIdentityPoolId: IdentityPoolId\r\n\t})\r\n});\r\n\r\nexport const addPhoto = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\tconst file = e.target.files[0];\r\n\tconst upload = new AWS.S3.ManagedUpload({\r\n\t\tparams: {\r\n\t\t\tBucket: albumBucketName,\r\n\t\t\tKey: `${paramKey}${file.name}`,\r\n\t\t\tBody: file,\r\n\t\t\tACL: 'public-read'\r\n\t\t}\r\n\t});\r\n\r\n\tconst result = upload.promise();\r\n\tconst url: Promise<string | void> = result.then(\r\n\t\t(data: AWS.S3.ManagedUpload.SendData) => {\r\n\t\t\talert('사진이 등록되었습니다.');\r\n\t\t\treturn data.Location;\r\n\t\t},\r\n\t\t(err: Error) => {\r\n\t\t\talert(`${err.message}`);\r\n\t\t}\r\n\t);\r\n\treturn url;\r\n};\r\n","import { AnyAction } from 'redux';\r\nimport { getType, AsyncActionCreatorBuilder } from 'typesafe-actions';\r\nexport type AsyncState<T, E = any> = {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: E | null;\r\n};\r\nexport const asyncState = {\r\n  initial: <T, E = any>(initialData?: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: initialData || null,\r\n    error: null,\r\n  }),\r\n  loading: <T, E = any>(data?: T): AsyncState<T, E> => ({\r\n    loading: true,\r\n    data: data || null,\r\n    error: null\r\n  }),\r\n  success: <T, E = any>(data: T): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data,\r\n    error: null\r\n  }),\r\n  error: <T, E>(error: E): AsyncState<T, E> => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n  })\r\n};\r\n\r\ntype AnyAsyncActionCreator = AsyncActionCreatorBuilder<any, any, any>;\r\nexport function transformToArray<AC extends AnyAsyncActionCreator>(\r\n  asyncActionCreator: AC,\r\n) {\r\n  const { request, success, failure } = asyncActionCreator;\r\n  return [request, success, failure];\r\n}\r\n\r\nexport const handleAsyncActions = <S, AC extends AnyAsyncActionCreator, K extends keyof S>(\r\n  type: AC,\r\n  key: K\r\n  ) => {\r\n  return (state: S, action: AnyAction) => {\r\n    const [request, success, failure] = transformToArray(type).map(getType);\r\n    switch (action.type) {\r\n      case request:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.loading(),\r\n        };\r\n      case success:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.success(action.payload),\r\n        };\r\n      case failure:\r\n        return {\r\n          ...state,\r\n          [key]: asyncState.error(action.payload),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { AsyncActionCreatorBuilder, PayloadAction } from 'typesafe-actions';\r\n\r\ntype PromiseCreatorFunction<P, T> = ((payload: P) => Promise<T>) | (() => Promise<T>);\r\n\r\nfunction isPayloadAction<P>(action: any): action is PayloadAction<string, P> {\r\n\treturn action.payload !== undefined;\r\n}\r\n\r\nexport default function createAsyncSaga<T1, P1, T2, P2, T3, P3>(\r\n\tasyncActionCreator: AsyncActionCreatorBuilder<[T1, [P1, undefined]], [T2, [P2, undefined]], [T3, [P3, undefined]]>,\r\n\tpromiseCreator: PromiseCreatorFunction<P1, P2>\r\n) {\r\n\treturn function* saga(action: ReturnType<typeof asyncActionCreator.request>) {\r\n\t\ttry {\r\n\t\t\tconst result = isPayloadAction<P1>(action)\r\n\t\t\t? yield call(promiseCreator, action.payload)\r\n\t\t\t: yield call(promiseCreator);\r\n\t\t\tyield put(asyncActionCreator.success(result));\r\n\t\t} catch (e) {\r\n\t\t\tyield put(asyncActionCreator.failure(e));\r\n\t\t}\r\n\t};\r\n}\r\n","import firebase, { provider } from '../../configs/init-firebase';\r\n\r\nexport const formatDate = (dateData: string) => {\r\n  const formatted: Date = new Date(dateData);\r\n  const year: number = formatted.getFullYear();\r\n  let month: number | string = formatted.getMonth() + 1;\r\n  let day: number | string = formatted.getDate();\r\n  month = Number(month) < 10 ? `0${month}` : month;\r\n  day = Number(day) < 10 ? `0${day}` : day;\r\n\r\n  return `${year}년 ${month}월 ${day}일`;\r\n};  \r\n\r\nexport const setItem = (key: string, obj: object) => {\r\n  return sessionStorage.setItem(key, JSON.stringify(obj));\r\n};\r\n\r\nexport const getItem = (key: string) => {\r\n  return sessionStorage.getItem(JSON.parse(key));\r\n};\r\n\r\nexport const removeExp = (str: string) => {\r\n  const regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi\r\n  if(regExp.test(str)) {\r\n    const result = str.replace(regExp, '');\r\n    return result;\r\n  } return str;\r\n} \r\n\r\nexport const loginPopup = () => {\r\n  firebase.auth().signInWithPopup(provider).then(function(result) {\r\n    const token = JSON.stringify(result.credential.toJSON());\r\n    sessionStorage.setItem(\"idToken\", token);\r\n    return result.user\r\n  }).catch(function(error) {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The firebase.auth.AuthCredential type that was used.\r\n    const credential = error.credential;\r\n    // ...\r\n  });\r\n}\r\n\r\nexport const logoutFn = () => {\r\n  firebase.auth().signOut().then(function() {\r\n    // Sign-out successful.\r\n    sessionStorage.removeItem(\"idToken\");\r\n  }).catch(function(error) {\r\n    // An error happened.\r\n  });\r\n}\r\n\r\nexport const checkUser = async () => {\r\n  const user = await firebase.auth().currentUser;\r\n  return user;\r\n}\r\n\r\nexport const loginEmail = (email: string, password: string) => {\r\n  const result = firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((res) => {\r\n      const token = JSON.stringify(res.user);\r\n      sessionStorage.setItem(\"idToken\", token);\r\n      return res\r\n  }).catch(err =>  console.log(err));\r\n  return result;\r\n}","import { Post, PutPostType } from './../../store/modules/post/types';\r\nimport { firebaseDB } from '../../configs/init-firebase';\r\n\r\nconst db = firebaseDB().firestore();\r\nconst blogDB = db.collection(\"blogDB\");\r\n\r\nexport const GetPostsList = async <T>(cnt: number): Promise<T[]> => {\r\n\t// const user = firebase.auth().currentUser\r\n\tconst query = blogDB.where(\"id\", \"<=\", cnt).orderBy(\"id\", \"desc\");\r\n\tconst response: T[] = await query.get().then((querySnapshot) => {\r\n\t\t\treturn querySnapshot.docs.map((data) => {\r\n\t\t\t\tconst ele: T = { ...data.data(), id: data.id } as unknown as T;\r\n\t\t\t\treturn ele;\r\n\t\t\t});\r\n\t\t}).catch((e) =>  console.log(e)) as T[];\r\n\treturn response;\r\n};\r\n\r\nexport const PutPost = async ({post, id}: PutPostType) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.set(post).then((res) => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t});\r\n\treturn response.data;\r\n};\r\n\r\nexport const PostUpdate = async (data: Post) => {\r\n\tconst response: string = await blogDB.add(data)\r\n\t\t.then((res) => {\r\n\t\t\treturn res.id;\r\n\t\t}).catch((err) => {\r\n\t\t\treturn err;\r\n\t\t});\r\n\treturn response;\r\n};\r\n\r\nexport const GetPost = async (index: string) => {\r\n\tconst query = blogDB.doc(index);\r\n\tconst response = await query.get().then((doc) => {\r\n\t\treturn { \r\n\t\t\tres: { ...doc.data(), id: doc.id } as unknown as Post, \r\n\t\t\tresId: doc.id \r\n\t\t};\r\n\t});\r\n\treturn response;\t\r\n};\r\n\r\nexport const DeletePost = async (id: string) => {\r\n\tconst query = blogDB.doc(id);\r\n\tconst response = await query.delete().then(() => {\r\n\t\treturn 'success';\r\n\t}).catch((err) => {\r\n\t\treturn err;\r\n\t})\r\n\treturn response;\r\n};\r\n\r\nexport type LoginType = {\r\n\tmessage: string;\r\n};\r\n","const atomOneDark = {\r\n  'hljs': {\r\n    'display': 'block',\r\n    'overflowX': 'auto',\r\n    'overflowY': 'hidden',\r\n    'padding': '1.5em',\r\n    'color': '#abb2bf',\r\n    'background': '#282c34',\r\n    'fontSize': '1.5rem',\r\n    'borderRadius': '1rem'\r\n  },\r\n  'hljs-comment': {\r\n    'color': '#5c6370',\r\n    'fontStyle': 'italic',\r\n  },\r\n  'hljs-quote': {\r\n    'color': '#5c6370',\r\n    'fontStyle': 'italic',\r\n  },\r\n  'hljs-doctag': {\r\n    'color': '#c678dd',\r\n  },\r\n  'hljs-keyword': {\r\n    'color': '#c678dd',\r\n  },\r\n  'hljs-formula': {\r\n    'color': '#c678dd',\r\n  },\r\n  'hljs-section': {\r\n    'color': '#e06c75',\r\n  },\r\n  'hljs-name': {\r\n    'color': '#e06c75',\r\n  },/**/\r\n  'hljs-selector-tag': {\r\n    'color': '#e06c75',\r\n  },\r\n  'hljs-deletion': {\r\n    'color': '#e06c75',\r\n  },\r\n  'hljs-subst': {\r\n    'color': '#e06c75',\r\n  },\r\n  'hljs-literal': {\r\n    'color': '#56b6c2',\r\n  },\r\n  'hljs-string': {\r\n    'color': '#98c379',\r\n  },\r\n  'hljs-regexp': {\r\n    'color': '#98c379',\r\n  },\r\n  'hljs-addition': {\r\n    'color': '#98c379',\r\n  },\r\n  'hljs-attribute': {\r\n    'color': '#98c379',\r\n  },\r\n  'hljs-meta-string': {\r\n    'color': '#98c379',\r\n  },\r\n  'hljs-built_in': {\r\n    'color': '#e6c07b',\r\n  },\r\n  'hljs-class .hljs-title': {\r\n    'color': '#e6c07b',\r\n  },\r\n  'hljs-attr': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-variable': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-template-variable': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-type': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-selector-class': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-selector-attr': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-selector-pseudo': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-number': {\r\n    'color': '#d19a66',\r\n  },\r\n  'hljs-symbol': {\r\n    'color': '#61aeee',\r\n  },\r\n  'hljs-bullet': {\r\n    'color': '#61aeee',\r\n  },\r\n  'hljs-link': {\r\n    'color': '#61aeee',\r\n    'textDecoration': 'underline',\r\n  },\r\n  'hljs-meta': {\r\n    'color': '#61aeee',\r\n  },\r\n  'hljs-selector-id': {\r\n    'color': '#61aeee',\r\n  },\r\n  'hljs-title': {\r\n    'color': '#61aeee',\r\n  },\r\n  'hljs-emphasis': {\r\n    'fontStyle': 'italic',\r\n  },\r\n  'hljs-strong': {\r\n    'fontWeight': 'bold',\r\n  },\r\n};\r\n\r\nexport default atomOneDark;","export const colors = {\r\n  defaultBlack: '#343a40',\r\n  gray0: '#F8F9FA',\r\n  gray1: '#F1F3F5',\r\n  gray2: '#E9ECEF',\r\n  gray3: '#DEE2E6',\r\n  gray4: '#CED4DA',\r\n  gray5: '#ADB5BD',\r\n  gray6: '#868E96',\r\n  gray7: '#495057',\r\n  gray8: '#343A40',\r\n  gray9: '#212529',\r\n  violet9: '#5f3dc4',\r\n  mainThemeColor: 'rgba(255, 255, 255, 0.88)',\r\n  whiteL1: '#c6cbd1',\r\n  whiteL2: '#dfe2e5',\r\n  whiteL3: '#f6f8fa',\r\n  whiteColor: '#1f1f1f',  \r\n  markdownCodeColor: '#c2cab9',\r\n};\r\n","export const breakpoints = {\r\n  xlarge: '1200px',\r\n  large: '1024px',\r\n  medium: '768px',\r\n  small: '576px',\r\n  xsmall: '360px',\r\n};\r\n","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","\r\nimport { useState } from 'react';\r\nimport Head from 'next/head'\r\nimport { getPostAsync } from '../../../store/modules/post';\r\nimport Maybe from '../../../components/Maybe/Maybe';\r\nimport BlogPostContainer from '../../../containers/BlogPost/BlogPostContainer';\r\nimport { NextPageCustom, nextPageProps } from '../../../lib/types/nextCustomTypes';\r\nimport { RootState } from '../../../store/modules';\r\nimport { useSelector } from 'react-redux';\r\nimport EditContainer from '../../../containers/Edit/EditContainer';\r\n\r\ntype blogType = {};\r\nconst post: NextPageCustom = ({}: blogType) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { postData } = useSelector(( state : RootState ) => ({\r\n    postData: state.post.post\r\n  }))\r\n  const { data } = postData;\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{data.res.title}</title>\r\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n      </Head>\r\n      <Maybe isVisible={editMode}>\r\n        <EditContainer editMode={editMode} />\r\n      </Maybe>\r\n      <Maybe isVisible={!editMode}>\r\n        <BlogPostContainer editMode={editMode} setEditMode={setEditMode} />\r\n      </Maybe>\r\n    </>\r\n  );\r\n};\r\n\r\npost.getInitialProps = async ({ store, isServer, query  }: nextPageProps) => {\r\n  const { id } = query;\r\n  if(isServer) {\r\n    await store.dispatch(getPostAsync.request(id as string));\r\n  }\r\n  return { };\r\n};\r\n\r\nexport default post;","// import Routes from 'next-routes';\r\n\r\n// const routes = new Routes();\r\n\r\n// routes \r\n//   .add('about', 'about')\r\n//   .add('post', 'dev/blog/:id')\r\n//   .add('postEdit', 'dev/edit/:id')\r\n//   .add('write', 'write')\r\n\r\n// export default routes;\r\n\r\nconst routes = module.exports = require('next-routes')()\r\nroutes\r\n  .add('index', '/')\r\n  .add('about', '/about')\r\n  .add('post', 'dev/blog/:id')\r\n  .add('postEdit', 'dev/edit/:id')\r\n  .add('write', 'write')\r\n// export default routes;","import { createAsyncAction } from 'typesafe-actions';\r\nimport { AxiosError } from 'axios';\r\nimport { Post, PutPostType } from './types';\r\n\r\nexport const DELETE_POST = 'post/DELETE_POST';\r\nexport const DELETE_POST_SUCCESS = 'post/DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_ERROR = 'post/DELETE_POST_ERROR';\r\n\r\nexport const EDIT_POST = 'post/EDIT_POST';\r\nexport const EDIT_POST_SUCCESS = 'post/EDIT_POST_SUCCESS';\r\nexport const EDIT_POST_ERROR = 'post/EDIT_POST_ERROR';\r\n\r\nexport const UPDATE_POST = 'post/UPDATE_POST';\r\nexport const UPDATE_POST_SUCCESS = 'post/UPDATE_POST_SUCCESS';\r\nexport const UPDATE_POST_ERROR = 'post/UPDATE_POST_ERROR';\r\n\r\nexport const GET_POSTS_LIST = 'post/GET_POSTS_LIST';\r\nexport const GET_POSTS_LIST_SUCCESS = 'post/GET_POSTS_LIST_SUCCESS';\r\nexport const GET_POSTS_LIST_ERROR = 'post/GET_POSTS_LIST_ERROR';\r\n\r\nexport const GET_POST = 'post/GET_POST';\r\nexport const GET_POST_SUCCESS = 'post/GET_POST_SUCCESS';\r\nexport const GET_POST_ERROR = 'post/GET_POST_ERROR';\r\n\r\nexport const deletePostAsync = createAsyncAction(\r\n  DELETE_POST,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_ERROR,\r\n)<string, any, AxiosError>();\r\n\r\nexport const getPostsListAsync = createAsyncAction(\r\n  GET_POSTS_LIST,\r\n  GET_POSTS_LIST_SUCCESS,\r\n  GET_POSTS_LIST_ERROR,\r\n)<number, Post[], AxiosError>();\r\n\r\nexport const postAsync = createAsyncAction(\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_ERROR,\r\n)<Post, string, AxiosError<string>>();\r\n\r\nexport const putPostAsync = createAsyncAction(\r\n  EDIT_POST,\r\n  EDIT_POST_SUCCESS,\r\n  EDIT_POST_ERROR,\r\n)<PutPostType, string, AxiosError<string>>();\r\n\r\nexport const getPostAsync = createAsyncAction(\r\n  GET_POST,\r\n  GET_POST_SUCCESS,\r\n  GET_POST_ERROR,\r\n)<string, {res: Post, resId: string}, AxiosError<string>>();","export { default } from './reducers';\r\nexport * from './actions';\r\nexport * from './types';\r\nexport * from './saga';","import { asyncState, transformToArray, handleAsyncActions } from './../../../lib/Utils/asyncUtils';\r\nimport { PostState, PostActions, Post } from './types';\r\nimport { createReducer } from 'typesafe-actions';\r\nimport {\r\n\tgetPostsListAsync,\r\n\tpostAsync,\r\n\tGET_POSTS_LIST,\r\n\tGET_POSTS_LIST_SUCCESS,\r\n\tGET_POSTS_LIST_ERROR,\r\n\tUPDATE_POST,\r\n\tUPDATE_POST_SUCCESS,\r\n\tUPDATE_POST_ERROR,\r\n\tGET_POST,\r\n\tGET_POST_SUCCESS,\r\n\tGET_POST_ERROR\r\n} from './actions';\r\n\r\nconst initialState: PostState = {\r\n\tpostsList: asyncState.initial(),\r\n\treqPost: asyncState.initial(),\r\n\tpost: asyncState.initial(),\r\n};\r\nconst post = createReducer<PostState, PostActions>(initialState, {\r\n\t[GET_POSTS_LIST]: (state) => ({\r\n\t\t...state,\r\n\t\tpostsList: asyncState.loading()\r\n\t}),\r\n\t[GET_POSTS_LIST_SUCCESS]: (state, action) => {\r\n\t\treturn {\r\n\t\t...state,\r\n\t\tpostsList: asyncState.success(action.payload)\r\n\t}},\r\n\t[GET_POSTS_LIST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpostsList: asyncState.error(action.payload)\r\n\t}),\r\n\t[UPDATE_POST]: (state) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.loading()\r\n\t}),\r\n\t[UPDATE_POST_SUCCESS]: (state, action) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.success(action.payload)\r\n\t}),\r\n\t[UPDATE_POST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\treqPost: asyncState.error(action.payload)\r\n\t}),\r\n\t[GET_POST]: (state) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.loading(),\r\n\t}),\r\n\t[GET_POST_SUCCESS]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.success(action.payload)\r\n\t}),\r\n\t[GET_POST_ERROR]: (state, action) => ({\r\n\t\t...state,\r\n\t\tpost: asyncState.error(action.payload)\r\n\t})\r\n});\r\n\r\n// refactoring code\r\nconst test = createReducer<PostState, PostActions>(initialState).handleAction(\r\n\ttransformToArray(getPostsListAsync),\r\n\thandleAsyncActions(getPostsListAsync, 'postsList')\r\n);\r\n\r\nexport default post;\r\n","import {\r\n\tgetPostsListAsync,\r\n\tGET_POSTS_LIST,\r\n\tEDIT_POST,\r\n\tputPostAsync,\r\n\tpostAsync,\r\n\tUPDATE_POST,\r\n\tgetPostAsync,\r\n\tGET_POST,\r\n  deletePostAsync,\r\n  DELETE_POST\r\n} from './actions';\r\nimport { GetPostsList, PostUpdate, GetPost, PutPost, DeletePost } from '../../../lib/api/apis';\r\nimport { takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport createAsyncSaga from '../../../lib/Utils/createAsyncSaga';\r\nimport { Post } from './types';\r\n\r\nconst deletePostSaga = createAsyncSaga(deletePostAsync, DeletePost);\r\nconst putPostSaga = createAsyncSaga(putPostAsync, PutPost);\r\nconst postUpdateSaga = createAsyncSaga(postAsync, PostUpdate);\r\nconst getPostsListSaga = createAsyncSaga(getPostsListAsync, GetPostsList);\r\nconst getPostSaga = createAsyncSaga(getPostAsync, GetPost);\r\n\r\nexport function* updateSaga() {\r\n\tyield takeLatest(UPDATE_POST, postUpdateSaga);\r\n}\r\nexport function* postSaga() {\r\n\tyield takeEvery(GET_POSTS_LIST, getPostsListSaga);\r\n}\r\nexport function* getOnePostSaga() {\r\n\tyield takeLatest(GET_POST, getPostSaga);\r\n}\r\nexport function* putSaga() {\r\n\tyield takeLatest(EDIT_POST, putPostSaga);\r\n}\r\nexport function* deleteSaga() {\r\n  yield takeLatest(DELETE_POST, deletePostSaga);\r\n}\r\n","import { updateKey } from './loginAsync/types';\r\nimport { createAction, ActionType, createReducer } from 'typesafe-actions';\r\n\r\nconst SET_INPUT_VALUES = 'post/SET_INPUT_VALUES';\r\nconst INPUT_VALUE = 'post/INPUT_VALUE';\r\nconst RESET_INPUT_VALUE = 'post/RESET_INPUT_VALUE';\r\nconst ADD_TAG_ARR = 'post/ADD_TAG_ARR';\r\n\r\nexport const addTagArr = createAction(ADD_TAG_ARR)<null>();\r\nexport const getValue = createAction(INPUT_VALUE, ({ name, value }: updateKey) => ({\r\n\tname,\r\n\tvalue\r\n}))<updateKey>();\r\n\r\nexport const resetInputValue = createAction(RESET_INPUT_VALUE)<null>();\r\nexport const setInputValues = createAction(SET_INPUT_VALUES, \r\n\t({ title, inputValue, mdValue, imgUrl, subTitle, tagArr, tag }: PostWrite) => ({\r\n\ttitle,\r\n\tinputValue,\r\n\tmdValue,\r\n\timgUrl,\r\n\ttagArr,\r\n\tsubTitle,\r\n\ttag\r\n}))<PostWrite>();\r\n\r\nconst actions = {\r\n\tgetValue,\r\n\tresetInputValue,\r\n\tsetInputValues,\r\n\taddTagArr,\r\n};\r\n\r\nexport type PostActions = ActionType<typeof actions>;\r\n\r\nexport type PostWrite = {\r\n\ttitle: string;\r\n\tinputValue: string;\r\n\tmdValue: string;\r\n\timgUrl: null | string;\r\n\tsubTitle: string;\r\n\ttagArr: string[] ;\r\n\ttag: string;\r\n};\r\n\r\nexport type PostState = {\r\n\tpostWrite: PostWrite;\r\n};\r\n\r\nconst initialState: PostState = {\r\n\tpostWrite: {\r\n\t\ttitle: '',\r\n\t\tinputValue: '',\r\n\t\tmdValue: '',\r\n\t\tsubTitle:'',\r\n\t\timgUrl: null,\r\n\t\ttagArr: [],\r\n\t\ttag: '',\r\n\t}\r\n};\r\n\r\nconst post = createReducer<PostState, PostActions>(initialState, {\r\n\t[SET_INPUT_VALUES]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: action.payload\r\n\t\t};\r\n\t},\r\n\t[RESET_INPUT_VALUE]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: {\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tinputValue: '',\r\n\t\t\t\tmdValue: '',\r\n\t\t\t\tsubTitle:'',\r\n\t\t\t\timgUrl: null,\r\n\t\t\t\ttagArr: [],\r\n\t\t\t\ttag: ''\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\t[INPUT_VALUE]: (state, { payload: { name, value } }) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: {\r\n\t\t\t\t...state.postWrite,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\t[ADD_TAG_ARR]: (state, action) => {\r\n\t\tconst{ tagArr, tag } = state.postWrite\r\n\t\tconst addTagArr = tagArr.concat(tag.replace(',', ''));\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpostWrite: {\r\n\t\t\t\t...state.postWrite,\r\n\t\t\t\ttagArr: addTagArr,\r\n\t\t\t\ttag: '',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport default post;\r\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/auth\");","module.exports = require(\"firebase/firestore\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-icons/fi\");","module.exports = require(\"react-markdown\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-syntax-highlighter\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"showdown\");","module.exports = require(\"styled-components\");","module.exports = require(\"typesafe-actions\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AALA;AACA;AAUA;AAAA;AAAA;AAAA;AA0BA;;;;;;;;;;;;;;;;;;;;AC1DA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAgCA;;;;;;;;;;;;;;;;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AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAhBA;AAwBA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAjBA;AAmBA;AACA;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AA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","sourceRoot":""}