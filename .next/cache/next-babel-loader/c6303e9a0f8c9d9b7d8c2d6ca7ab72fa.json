{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getValue, addTagArr } from \"../../store/modules/postUI\";\nimport { Head } from \"../../components/Write\";\nimport SubTitleInput from \"../../components/Write/SubTItleInput\";\nimport TagAndImg from '../../components/Write/TagAndImg';\nimport { addPhoto } from \"../../lib/Utils/S3\";\n\nvar EditorHeaderContainer = function EditorHeaderContainer(_ref) {\n  var onChange = _ref.onChange,\n      postWrite = _ref.postWrite,\n      onUpload = _ref.onUpload;\n  var dispatch = useDispatch();\n  var handleTags = useCallback(function (e) {\n    if (e.keyCode === 188 && postWrite.tag !== ',') {\n      dispatch(addTagArr());\n    }\n  }, [dispatch, postWrite.tag]);\n  var reqImgUpload = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var bucketData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addPhoto(e);\n\n            case 2:\n              bucketData = _context.sent;\n\n              if (typeof bucketData === 'string') {\n                dispatch(getValue({\n                  name: 'imgUrl',\n                  value: bucketData\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  var reqGetImgUrl = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(e) {\n      var bucketData, imgMarkdown;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return addPhoto(e);\n\n            case 2:\n              bucketData = _context2.sent;\n\n              if (typeof bucketData === 'string') {\n                imgMarkdown = \"![](\".concat(bucketData, \")\");\n                dispatch(getValue({\n                  name: 'inputValue',\n                  value: imgMarkdown\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    onUpload: onUpload,\n    postWrite: postWrite,\n    onChange: onChange,\n    reqImgUpload: reqImgUpload\n  }), __jsx(SubTitleInput, {\n    subTitle: postWrite.subTitle,\n    onChange: onChange\n  }), __jsx(TagAndImg, {\n    reqGetImgUrl: reqGetImgUrl,\n    tag: postWrite.tag,\n    tagArr: postWrite.tagArr,\n    onChange: onChange,\n    onAddTag: handleTags\n  }));\n};\n\nexport default EditorHeaderContainer;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/Common/EditorHeaderContainer.tsx"],"names":["EditorHeaderContainer","onChange","postWrite","onUpload","dispatch","useDispatch","handleTags","useCallback","e","addTagArr","reqImgUpload","bucketData","addPhoto","getValue","name","value","reqGetImgUrl","imgMarkdown"],"mappings":";;;;AAAA,SAAA,WAAA,QAAA,OAAA;AAEA,SAAA,WAAA,QAAA,aAAA;AACA,SAAA,QAAA,EAAA,SAAA,QAAA,4BAAA;AAGA,SAAA,IAAA,QAAA,wBAAA;AACA,OAAA,aAAA,MAAA,sCAAA;AACA,OAAA,SAAA,MAAA,kCAAA;AACA,SAAA,QAAA,QAAA,oBAAA;;AAQA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,IAAA,EAA0D;AAAA,MAAvDC,QAAuD,GAAA,IAAA,CAAvDA,QAAuD;AAAA,MAA7CC,SAA6C,GAAA,IAAA,CAA7CA,SAA6C;AAAA,MAAlCC,QAAkC,GAAA,IAAA,CAAlCA,QAAkC;AACtF,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AAEA,MAAMC,UAAU,GAAGC,WAAW,CAAC,UAAA,CAAA,EAA8C;AAC3E,QAAGC,CAAC,CAADA,OAAAA,KAAAA,GAAAA,IAAqBN,SAAS,CAATA,GAAAA,KAAxB,GAAA,EAA+C;AAC7CE,MAAAA,QAAQ,CAACK,SAATL,EAAQ,CAARA;AACD;AAH2B,GAAA,EAI3B,CAAA,QAAA,EAAWF,SAAS,CAJvB,GAIG,CAJ2B,CAA9B;AAMA,MAAMQ,YAAY,GAAGH,WAAW;AAAA;AAAA,cAAA;AAAA,QAAA,KAAA,GAAA,iBAAA;AAAA;AAAA,IAAA,mBAAA,CAAA,IAAA,CAAC,SAAA,OAAA,CAAA,CAAA,EAAA;AAAA,UAAA,UAAA;AAAA,aAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,qBACSK,QAAQ,CADjB,CACiB,CADjB;;AAAA,iBAAA,CAAA;AACzBD,cAAAA,UADyB,GAAA,QAAA,CAAA,IACzBA;;AACN,kBAAI,OAAA,UAAA,KAAJ,QAAA,EAAoC;AAClCP,gBAAAA,QAAQ,CAACS,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAN,QAAA;AAAkBC,kBAAAA,KAAK,EAAEJ;AAAzB,iBAAD,CAAT,CAARP;AACD;;AAJ8B,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,OAAA,CAAA;AAAD,KAAA,CAAA,CAAA;;AAAA,WAAA,UAAA,EAAA,EAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA,KAAA;AAAA,GAAA,EAAA,EAK7B,CALH,QAKG,CAL6B,CAAhC;AAOA,MAAMY,YAAY,GAAGT,WAAW;AAAA;AAAA,cAAA;AAAA,QAAA,KAAA,GAAA,iBAAA;AAAA;AAAA,IAAA,mBAAA,CAAA,IAAA,CAAC,SAAA,QAAA,CAAA,CAAA,EAAA;AAAA,UAAA,UAAA,EAAA,WAAA;AAAA,aAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA,qBACSK,QAAQ,CADjB,CACiB,CADjB;;AAAA,iBAAA,CAAA;AACzBD,cAAAA,UADyB,GAAA,SAAA,CAAA,IACzBA;;AACN,kBAAI,OAAA,UAAA,KAAJ,QAAA,EAAoC;AAC5BM,gBAAAA,WAD4B,GAAA,OAAA,MAAA,CAAA,UAAA,EAAA,GAAA,CAC5BA;AACNb,gBAAAA,QAAQ,CAACS,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAN,YAAA;AAAsBC,kBAAAA,KAAK,EAAEE;AAA7B,iBAAD,CAAT,CAARb;AACD;;AAL8B,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,QAAA,CAAA;AAAD,KAAA,CAAA,CAAA;;AAAA,WAAA,UAAA,GAAA,EAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA,KAAA;AAAA,GAAA,EAAA,EAM7B,CANH,QAMG,CAN6B,CAAhC;AAQA,SACE,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,IAAA,EAAA;AAAM,IAAA,QAAQ,EAAd,QAAA;AAA0B,IAAA,SAAS,EAAnC,SAAA;AAAgD,IAAA,QAAQ,EAAxD,QAAA;AAAoE,IAAA,YAAY,EAAEM;AAAlF,GAAA,CADF,EAEE,KAAA,CAAA,aAAA,EAAA;AAAe,IAAA,QAAQ,EAAER,SAAS,CAAlC,QAAA;AAA6C,IAAA,QAAQ,EAAED;AAAvD,GAAA,CAFF,EAGE,KAAA,CAAA,SAAA,EAAA;AACE,IAAA,YAAY,EADd,YAAA;AAEE,IAAA,GAAG,EAAEC,SAAS,CAFhB,GAAA;AAGE,IAAA,MAAM,EAAEA,SAAS,CAHnB,MAAA;AAIE,IAAA,QAAQ,EAJV,QAAA;AAKE,IAAA,QAAQ,EAAEI;AALZ,GAAA,CAHF,CADF;AAxBF,CAAA;;AAuCA,eAAA,qBAAA","sourcesContent":["import { useCallback } from \"react\";\r\nimport { AxiosError } from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PostWrite, getValue, addTagArr } from \"../../store/modules/postUI\";\r\nimport { AsyncState } from \"../../lib/Utils/asyncUtils\";\r\nimport { Post } from \"../../store/modules/post\";\r\nimport { Head } from \"../../components/Write\";\r\nimport SubTitleInput from \"../../components/Write/SubTItleInput\";\r\nimport TagAndImg from '../../components/Write/TagAndImg';\r\nimport { addPhoto } from \"../../lib/Utils/S3\";\r\n\r\n\r\ntype EditorHeaderProps = {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  postWrite: PostWrite;\r\n  onUpload: () => void;\r\n}\r\nconst EditorHeaderContainer = ({ onChange, postWrite, onUpload }: EditorHeaderProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTags = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if(e.keyCode === 188 && postWrite.tag !== ',') {\r\n      dispatch(addTagArr());\r\n    }\r\n  }, [dispatch, postWrite.tag]);\r\n  \r\n  const reqImgUpload = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const bucketData: string | void = await addPhoto(e);\r\n    if (typeof bucketData === 'string') {\r\n      dispatch(getValue({ name: 'imgUrl', value: bucketData }));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const reqGetImgUrl = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const bucketData: string | void = await addPhoto(e);\r\n    if (typeof bucketData === 'string') {\r\n      const imgMarkdown = `![](${bucketData})`;\r\n      dispatch(getValue({ name: 'inputValue', value: imgMarkdown }));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Head onUpload={onUpload} postWrite={postWrite} onChange={onChange} reqImgUpload={reqImgUpload} />\r\n      <SubTitleInput subTitle={postWrite.subTitle} onChange={onChange} />\r\n      <TagAndImg\r\n        reqGetImgUrl={reqGetImgUrl}\r\n        tag={postWrite.tag}\r\n        tagArr={postWrite.tagArr}\r\n        onChange={onChange}\r\n        onAddTag={handleTags}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditorHeaderContainer;"]},"metadata":{},"sourceType":"module"}