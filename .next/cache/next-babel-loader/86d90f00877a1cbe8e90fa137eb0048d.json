{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getValue, addTagArr } from \"../../store/modules/postUI\";\nimport { Head } from \"../../components/Write\";\nimport SubTitleInput from \"../../components/Write/SubTItleInput\";\nimport TagAndImg from '../../components/Write/TagAndImg';\nimport { addPhoto } from \"../../lib/Utils/S3\";\n\nvar EditorHeaderContainer = function EditorHeaderContainer(_ref) {\n  var onChange = _ref.onChange,\n      postWrite = _ref.postWrite,\n      onUpload = _ref.onUpload;\n  var dispatch = useDispatch();\n  var handleTags = useCallback(function (e) {\n    if (e.keyCode === 188 && postWrite.tag !== ',') {\n      dispatch(addTagArr());\n    }\n  }, [dispatch, postWrite.tag]);\n  var reqImgUpload = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var bucketData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addPhoto(e);\n\n            case 2:\n              bucketData = _context.sent;\n\n              if (typeof bucketData === 'string') {\n                dispatch(getValue({\n                  name: 'imgUrl',\n                  value: bucketData\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  var reqGetImgUrl = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(e) {\n      var bucketData, imgMarkdown;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return addPhoto(e);\n\n            case 2:\n              bucketData = _context2.sent;\n\n              if (typeof bucketData === 'string') {\n                imgMarkdown = \"![](\".concat(bucketData, \")\");\n                dispatch(getValue({\n                  name: 'inputValue',\n                  value: imgMarkdown\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    onUpload: onUpload,\n    postWrite: postWrite,\n    onChange: onChange,\n    reqImgUpload: reqImgUpload\n  }), __jsx(SubTitleInput, {\n    subTitle: postWrite.subTitle,\n    onChange: onChange\n  }), __jsx(TagAndImg, {\n    reqGetImgUrl: reqGetImgUrl,\n    tag: postWrite.tag,\n    tagArr: postWrite.tagArr,\n    onChange: onChange,\n    onAddTag: handleTags\n  }));\n};\n\nexport default EditorHeaderContainer;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/Common/EditorHeaderContainer.tsx"],"names":["useCallback","useDispatch","getValue","addTagArr","Head","SubTitleInput","TagAndImg","addPhoto","EditorHeaderContainer","onChange","postWrite","onUpload","dispatch","handleTags","e","keyCode","tag","reqImgUpload","bucketData","name","value","reqGetImgUrl","imgMarkdown","subTitle","tagArr"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,4BAA/C;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAQA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA0D;AAAA,MAAvDC,QAAuD,QAAvDA,QAAuD;AAAA,MAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AACtF,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,MAAMY,UAAU,GAAGb,WAAW,CAAC,UAACc,CAAD,EAA8C;AAC3E,QAAGA,CAAC,CAACC,OAAF,KAAc,GAAd,IAAqBL,SAAS,CAACM,GAAV,KAAkB,GAA1C,EAA+C;AAC7CJ,MAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACD;AACF,GAJ6B,EAI3B,CAACS,QAAD,EAAWF,SAAS,CAACM,GAArB,CAJ2B,CAA9B;AAMA,MAAMC,YAAY,GAAGjB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAC,iBAAOc,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSP,QAAQ,CAACO,CAAD,CADjB;;AAAA;AACzBI,cAAAA,UADyB;;AAE/B,kBAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClCN,gBAAAA,QAAQ,CAACV,QAAQ,CAAC;AAAEiB,kBAAAA,IAAI,EAAE,QAAR;AAAkBC,kBAAAA,KAAK,EAAEF;AAAzB,iBAAD,CAAT,CAAR;AACD;;AAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAK7B,CAACN,QAAD,CAL6B,CAAhC;AAOA,MAAMS,YAAY,GAAGrB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAC,kBAAOc,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSP,QAAQ,CAACO,CAAD,CADjB;;AAAA;AACzBI,cAAAA,UADyB;;AAE/B,kBAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAC5BI,gBAAAA,WAD4B,iBACPJ,UADO;AAElCN,gBAAAA,QAAQ,CAACV,QAAQ,CAAC;AAAEiB,kBAAAA,IAAI,EAAE,YAAR;AAAsBC,kBAAAA,KAAK,EAAEE;AAA7B,iBAAD,CAAT,CAAR;AACD;;AAL8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAM7B,CAACV,QAAD,CAN6B,CAAhC;AAQA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,QAAhB;AAA0B,IAAA,SAAS,EAAED,SAArC;AAAgD,IAAA,QAAQ,EAAED,QAA1D;AAAoE,IAAA,YAAY,EAAEQ;AAAlF,IADF,EAEE,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEP,SAAS,CAACa,QAAnC;AAA6C,IAAA,QAAQ,EAAEd;AAAvD,IAFF,EAGE,MAAC,SAAD;AACE,IAAA,YAAY,EAAEY,YADhB;AAEE,IAAA,GAAG,EAAEX,SAAS,CAACM,GAFjB;AAGE,IAAA,MAAM,EAAEN,SAAS,CAACc,MAHpB;AAIE,IAAA,QAAQ,EAAEf,QAJZ;AAKE,IAAA,QAAQ,EAAEI;AALZ,IAHF,CADF;AAaD,CArCD;;AAuCA,eAAeL,qBAAf","sourcesContent":["import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PostWrite, getValue, addTagArr } from \"../../store/modules/postUI\";\r\nimport { Head } from \"../../components/Write\";\r\nimport SubTitleInput from \"../../components/Write/SubTItleInput\";\r\nimport TagAndImg from '../../components/Write/TagAndImg';\r\nimport { addPhoto } from \"../../lib/Utils/S3\";\r\n\r\n\r\ntype EditorHeaderProps = {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  postWrite: PostWrite;\r\n  onUpload: () => void;\r\n}\r\nconst EditorHeaderContainer = ({ onChange, postWrite, onUpload }: EditorHeaderProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTags = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if(e.keyCode === 188 && postWrite.tag !== ',') {\r\n      dispatch(addTagArr());\r\n    }\r\n  }, [dispatch, postWrite.tag]);\r\n  \r\n  const reqImgUpload = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const bucketData: string | void = await addPhoto(e);\r\n    if (typeof bucketData === 'string') {\r\n      dispatch(getValue({ name: 'imgUrl', value: bucketData }));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const reqGetImgUrl = useCallback(async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const bucketData: string | void = await addPhoto(e);\r\n    if (typeof bucketData === 'string') {\r\n      const imgMarkdown = `![](${bucketData})`;\r\n      dispatch(getValue({ name: 'inputValue', value: imgMarkdown }));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Head onUpload={onUpload} postWrite={postWrite} onChange={onChange} reqImgUpload={reqImgUpload} />\r\n      <SubTitleInput subTitle={postWrite.subTitle} onChange={onChange} />\r\n      <TagAndImg\r\n        reqGetImgUrl={reqGetImgUrl}\r\n        tag={postWrite.tag}\r\n        tagArr={postWrite.tagArr}\r\n        onChange={onChange}\r\n        onAddTag={handleTags}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditorHeaderContainer;"]},"metadata":{},"sourceType":"module"}