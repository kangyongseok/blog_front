{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport firebase, { provider } from '../../config/init-firebase';\nexport const formatDate = dateData => {\n  const formatted = new Date(dateData);\n  const year = formatted.getFullYear();\n  let month = formatted.getMonth() + 1;\n  let day = formatted.getDate();\n  month = Number(month) < 10 ? `0${month}` : month;\n  day = Number(day) < 10 ? `0${day}` : day;\n  return `${year}년 ${month}월 ${day}일`;\n};\nexport const setItem = (key, obj) => {\n  return sessionStorage.setItem(key, _JSON$stringify(obj));\n};\nexport const getItem = key => {\n  return sessionStorage.getItem(JSON.parse(key));\n};\nexport const removeExp = str => {\n  const regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n\n  if (regExp.test(str)) {\n    const result = str.replace(regExp, '');\n    return result;\n  }\n\n  return str;\n};\nexport const loginPopup = () => {\n  firebase.auth().signInWithPopup(provider).then(function (result) {\n    const token = _JSON$stringify(result.credential.toJSON());\n\n    sessionStorage.setItem(\"idToken\", token);\n    return result.user;\n  }).catch(function (error) {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    const credential = error.credential; // ...\n  });\n};\nexport const logoutFn = () => {\n  firebase.auth().signOut().then(function () {\n    // Sign-out successful.\n    sessionStorage.removeItem(\"idToken\");\n  }).catch(function (error) {// An error happened.\n  });\n};\nexport const checkUser = async () => {\n  const user = await firebase.auth().currentUser;\n  return user;\n};\nexport const loginEmail = (email, password) => {\n  const result = firebase.auth().signInWithEmailAndPassword(email, password).then(res => {\n    const token = _JSON$stringify(res.user);\n\n    sessionStorage.setItem(\"idToken\", token);\n    return res;\n  }).catch(err => console.log(err));\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}