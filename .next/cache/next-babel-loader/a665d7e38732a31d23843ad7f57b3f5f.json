{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nvar __jsx = React.createElement;\nimport React, { useRef, useCallback } from 'react';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Preview } from '../../components/Write';\nimport { getValue } from '../../store/modules/postUI';\nimport { ROUTES } from '../../lib/Routes/Routes';\nimport { removeExp } from '../../lib/Utils/utils';\nimport { postAsync } from '../../store/modules/post';\n\nvar WriteContainerTest = function WriteContainerTest(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var dispatch = useDispatch();\n  var mdRef = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postWrite: state.postUI.postWrite,\n      postsList: state.post.postsList\n    };\n  }),\n      postWrite = _useSelector.postWrite,\n      postsList = _useSelector.postsList;\n\n  var handleChange = useCallback(function (e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    dispatch(getValue({\n      name: name,\n      value: value\n    }));\n  }, [dispatch]);\n  var handleConv = useCallback(function (html) {\n    dispatch(getValue({\n      name: 'mdValue',\n      value: html\n    }));\n  }, [dispatch]);\n  var onUpload = useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var uploadDate, title, inputValue, mdValue, imgUrl, subTitle, tagArr, withoutExp, dataForUpload;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uploadDate = new Date().toISOString();\n            title = postWrite.title, inputValue = postWrite.inputValue, mdValue = postWrite.mdValue, imgUrl = postWrite.imgUrl, subTitle = postWrite.subTitle, tagArr = postWrite.tagArr;\n            withoutExp = removeExp(inputValue);\n            dataForUpload = {\n              title: title,\n              rawContent: inputValue,\n              content: withoutExp,\n              contentMd: mdValue,\n              date: uploadDate,\n              imgUrl: imgUrl,\n              id: postsList.data[0].id + 1,\n              subTitle: subTitle,\n              tagArr: tagArr\n            };\n            _context.prev = 4;\n            dispatch(postAsync.request(dataForUpload));\n            Router.push(ROUTES.home, ROUTES.home, {\n              shallow: true\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](4);\n            throw _context.t0;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 9]]);\n  })), [dispatch, postWrite]); // useEffect(\n  // \t() => {\n  // \t\tmdRef.current.scrollTo(0, mdRef.current.scrollHeight);\n  // \t},\n  // \t[ postWrite.inputValue ]\n  // );\n  // useEffect(() => {\n  // \treturn () => {\n  // \t\tdispatch(resetInputValue());\n  // \t\tcheckUser();\n  // \t};\n  // }, []);\n\n  return __jsx(EditBox, null, __jsx(Preview, {\n    inputValue: postWrite.inputValue,\n    mdRef: mdRef,\n    onChange: handleConv\n  }));\n};\n\nexport default WriteContainerTest;\nvar EditBox = styled.div.withConfig({\n  displayName: \"WriteContainerTest__EditBox\",\n  componentId: \"sc-1ww7q8q-0\"\n})([\"display:flex;height:94rem;justify-content:space-between;\"]);\nvar EditPart = styled.div.withConfig({\n  displayName: \"WriteContainerTest__EditPart\",\n  componentId: \"sc-1ww7q8q-1\"\n})([\"width:calc(50% - 1.6rem);\"]);","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/Write/WriteContainerTest.tsx"],"names":["WriteContainerTest","dispatch","useDispatch","mdRef","useRef","postWrite","postsList","useSelector","state","handleChange","useCallback","value","name","e","getValue","handleConv","html","onUpload","uploadDate","title","inputValue","mdValue","imgUrl","subTitle","tagArr","withoutExp","removeExp","dataForUpload","rawContent","content","contentMd","date","id","postAsync","Router","ROUTES","shallow","EditBox","styled","EditPart"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Editor, Head, Preview } from '../../components/Write';\r\nimport { RootState } from '../../store/modules';\r\nimport { getValue, resetInputValue, addTagArr } from '../../store/modules/postUI';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { removeExp, checkUser } from '../../lib/Utils/utils';\r\nimport { Post, postAsync } from '../../store/modules/post';\r\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\r\n\r\ntype WriteContainerProps = {};\r\n\r\nconst WriteContainerTest = ({}: WriteContainerProps) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst mdRef = useRef<HTMLDivElement>();\r\n\tconst { postWrite, postsList } = useSelector((state: RootState) => ({\r\n\t\tpostWrite: state.postUI.postWrite,\r\n    postsList: state.post.postsList,\r\n\t}));\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(e: React.ChangeEvent<any>) => {\r\n\t\t\tconst { value, name } = e.target;\r\n\t\t\tdispatch(getValue({ name, value }));\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n\r\n\tconst handleConv = useCallback(\r\n\t\t(html: string) => {\r\n\t\t\tdispatch(getValue({ name: 'mdValue', value: html }));\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n\r\n\tconst onUpload = useCallback(async () => {\r\n\t\tconst uploadDate = new Date().toISOString();\r\n\t\tconst { title, inputValue, mdValue, imgUrl, subTitle, tagArr} = postWrite\r\n\t\tconst withoutExp = removeExp(inputValue);\r\n\t\tconst dataForUpload: Post = {\r\n\t\t\ttitle: title,\r\n\t\t\trawContent: inputValue,\r\n\t\t\tcontent: withoutExp,\r\n\t\t\tcontentMd: mdValue,\r\n\t\t\tdate: uploadDate,\r\n\t\t\timgUrl: imgUrl,\r\n\t\t\tid: postsList.data[0].id + 1,\r\n       subTitle: subTitle,\r\n       tagArr: tagArr,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tdispatch(postAsync.request(dataForUpload));\r\n\t\t\tRouter.push(ROUTES.home, ROUTES.home, { shallow: true });\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t},[ dispatch, postWrite ]\r\n\t);\r\n\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tmdRef.current.scrollTo(0, mdRef.current.scrollHeight);\r\n\t// \t},\r\n\t// \t[ postWrite.inputValue ]\r\n\t// );\r\n\r\n\t// useEffect(() => {\r\n\t// \treturn () => {\r\n\t// \t\tdispatch(resetInputValue());\r\n\t// \t\tcheckUser();\r\n\t// \t};\r\n\t// }, []);\r\n\treturn (\r\n\t\t<EditBox>\r\n\t\t\t{/* <EditPart>\r\n\t\t\t\t<EditorHeaderContainer \r\n          postWrite={postWrite}\r\n          onChange={handleChange}\r\n          onUpload={onUpload}\r\n        />\r\n\t\t\t\t<Editor inputValue={postWrite.inputValue} onChange={handleChange} />\r\n\t\t\t</EditPart> */}\r\n\t\t\t<Preview inputValue={postWrite.inputValue} mdRef={mdRef} onChange={handleConv} />\r\n\t\t</EditBox>\r\n\t);\r\n};\r\n\r\nexport default WriteContainerTest;\r\nconst EditBox = styled.div`\r\n\tdisplay: flex;\r\n\theight: 94rem;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst EditPart = styled.div`width: calc(50% - 1.6rem);`;\r\n"]},"metadata":{},"sourceType":"module"}