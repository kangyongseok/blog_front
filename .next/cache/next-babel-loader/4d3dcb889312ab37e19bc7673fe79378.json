{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { loginEmail } from \"../../../lib/Utils/utils\";\nimport { getIsLogged } from '../../../store/modules/loginUI';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nvar login = function login(_ref) {\n  var isServer = _ref.isServer;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      isLogged: state.loginUI.isLogged\n    };\n  }),\n      isLogged = _useSelector.isLogged;\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var onChangeEmail = function onChangeEmail(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    setEmail(value);\n  };\n\n  var onChangePassword = function onChangePassword(e) {\n    var _e$target2 = e.target,\n        value = _e$target2.value,\n        name = _e$target2.name;\n    setPassword(value);\n  };\n\n  var onSumit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return loginEmail(email, password);\n\n            case 3:\n              res = _context.sent;\n\n              if (res) {\n                dispatch(getIsLogged(true));\n                router.push('/', '/');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSumit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", {\n    onChange: onChangeEmail,\n    value: email\n  }), __jsx(\"input\", {\n    type: \"password\",\n    onChange: onChangePassword,\n    value: password\n  })), __jsx(\"button\", {\n    onClick: onSumit\n  }, isLogged ? '로그아웃' : '로그인'));\n};\n\nlogin.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(ctx) {\n    var isServer;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            isServer = ctx.req ? 'server' : 'client';\n            return _context2.abrupt(\"return\", {\n              isServer: isServer\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default login;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/admin/oscar/login.tsx"],"names":["login","isServer","dispatch","useDispatch","isLogged","useSelector","state","router","useRouter","email","setEmail","useState","password","setPassword","onChangeEmail","value","name","e","onChangePassword","onSumit","res","loginEmail","getIsLogged","ctx"],"mappings":"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","sourcesContent":["import { loginEmail } from \"../../../lib/Utils/utils\";\r\nimport { RootState } from \"../../../store/modules\";\r\nimport { getIsLogged } from '../../../store/modules/loginUI';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n\r\ntype loginProps = {\r\n  isServer: string;\r\n};\r\nconst login: NextPage = ({ isServer }: loginProps) => {\r\n  const dispatch = useDispatch();\r\n  const { isLogged } = useSelector((state: RootState) => ({\r\n    isLogged: state.loginUI.isLogged,\r\n  }))\r\n  const router = useRouter();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setEmail(value);\r\n  }\r\n  const onChangePassword = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setPassword(value);\r\n  }\r\n  const onSumit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const res = await loginEmail(email, password);\r\n    if (res) {\r\n      dispatch(getIsLogged(true));\r\n      router.push('/', '/');\r\n    }\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <form>\r\n        <input onChange={onChangeEmail} value={email} />\r\n        <input type=\"password\" onChange={onChangePassword} value={password} />\r\n      </form>\r\n      <button onClick={onSumit}>\r\n        {isLogged ? '로그아웃' : '로그인'}\r\n      </button>\r\n    </>\r\n  )\r\n}\r\nlogin.getInitialProps = async (ctx: NextPageContext) => {\r\n  const isServer = ctx.req ? 'server' : 'client';\r\n  return { isServer };\r\n};\r\n\r\nexport default login;"]},"metadata":{},"sourceType":"module"}