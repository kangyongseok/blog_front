{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch } from \"react-redux\";\nimport styled from 'styled-components';\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport HeaderContainer from '../containers/Header/HeaderContainer';\nimport WriteContainerTest from \"../containers/Write/WriteContainerTest\";\n\nvar options = function options(_ref) {\n  var isServer = _ref.isServer;\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var onChangeEmail = function onChangeEmail(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    setEmail(value);\n  };\n\n  var onChangePassword = function onChangePassword(e) {\n    var _e$target2 = e.target,\n        value = _e$target2.value,\n        name = _e$target2.name;\n    setPassword(value);\n  };\n\n  return __jsx(Wrapper, null, __jsx(HeaderContainer, null), __jsx(WriteContainerTest, null), \"\\uCCB4\\uD06C\\uCCB4\\uD06C\");\n};\n\noptions.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var isServer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            isServer = ctx.req ? 'server' : 'client';\n            return _context.abrupt(\"return\", {\n              isServer: isServer\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar Wrapper = styled.main.withConfig({\n  displayName: \"options__Wrapper\",\n  componentId: \"sc-1rc8inq-0\"\n})([\"width:100%;height:100rem;margin:auto;\"]);\nexport default options;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/options.tsx"],"names":["useDispatch","styled","useState","useRouter","HeaderContainer","WriteContainerTest","options","isServer","dispatch","router","email","setEmail","password","setPassword","onChangeEmail","e","target","value","name","onChangePassword","getInitialProps","ctx","req","Wrapper","main"],"mappings":";;;;AAAA,SAAsBA,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;;AAMA,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,OAA8B;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AACtD,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,MAAM,GAAGN,SAAS,EAAxB;;AAFsD,kBAI5BD,QAAQ,CAAC,EAAD,CAJoB;AAAA,MAI/CQ,KAJ+C;AAAA,MAIxCC,QAJwC;;AAAA,mBAKtBT,QAAQ,CAAC,EAAD,CALc;AAAA,MAK/CU,QAL+C;AAAA,MAKrCC,WALqC;;AAOtD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAA+B;AAAA,oBAC3BA,CAAC,CAACC,MADyB;AAAA,QAC3CC,KAD2C,aAC3CA,KAD2C;AAAA,QACpCC,IADoC,aACpCA,IADoC;AAEnDP,IAAAA,QAAQ,CAACM,KAAD,CAAR;AACD,GAHD;;AAIA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,CAAD,EAA+B;AAAA,qBAC9BA,CAAC,CAACC,MAD4B;AAAA,QAC9CC,KAD8C,cAC9CA,KAD8C;AAAA,QACvCC,IADuC,cACvCA,IADuC;AAEtDL,IAAAA,WAAW,CAACI,KAAD,CAAX;AACD,GAHD;;AAIA,SACE,MAAC,OAAD,QACE,MAAC,eAAD,OADF,EAEE,MAAC,kBAAD,OAFF,6BADF;AAQD,CAvBD;;AAwBAX,OAAO,CAACc,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBd,YAAAA,QADkB,GACPc,GAAG,CAACC,GAAJ,GAAU,QAAV,GAAqB,QADd;AAAA,6CAEjB;AAAEf,cAAAA,QAAQ,EAARA;AAAF,aAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAIA,IAAMgB,OAAO,GAAGtB,MAAM,CAACuB,IAAV;AAAA;AAAA;AAAA,6CAAb;AAKA,eAAelB,OAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from 'styled-components';\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport HeaderContainer from '../containers/Header/HeaderContainer';\r\nimport WriteContainerTest from \"../containers/Write/WriteContainerTest\";\r\n\r\n\r\ntype loginProps = {\r\n  isServer: string;\r\n};\r\nconst options: NextPage = ({ isServer }: loginProps) => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setEmail(value);\r\n  }\r\n  const onChangePassword = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setPassword(value);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <HeaderContainer />\r\n      <WriteContainerTest />\r\n      \r\n      체크체크\r\n    </Wrapper>\r\n  )\r\n}\r\noptions.getInitialProps = async (ctx: NextPageContext) => {\r\n  const isServer = ctx.req ? 'server' : 'client';\r\n  return { isServer };\r\n};\r\nconst Wrapper = styled.main`\r\n  width: 100%;\r\n  height: 100rem;\r\n  margin: auto;\r\n`;\r\nexport default options;"]},"metadata":{},"sourceType":"module"}