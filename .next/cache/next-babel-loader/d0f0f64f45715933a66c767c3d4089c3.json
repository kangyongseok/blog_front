{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { loginEmail } from \"../../../lib/Utils/utils\";\nimport { getIsLogged } from '../../../store/modules/loginUI';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nconst login = ({\n  isServer\n}) => {\n  const dispatch = useDispatch();\n  const {\n    isLogged\n  } = useSelector(state => ({\n    isLogged: state.loginUI.isLogged\n  }));\n  const router = useRouter();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n\n  const onChangeEmail = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setEmail(value);\n  };\n\n  const onChangePassword = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setPassword(value);\n  };\n\n  const onSumit = async e => {\n    e.preventDefault();\n    const res = await loginEmail(email, password);\n\n    if (res) {\n      dispatch(getIsLogged(true));\n      router.push('/', '/');\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", {\n    onChange: onChangeEmail,\n    value: email\n  }), __jsx(\"input\", {\n    type: \"password\",\n    onChange: onChangePassword,\n    value: password\n  })), __jsx(\"button\", {\n    onClick: onSumit\n  }, isLogged ? '로그아웃' : '로그인'));\n};\n\nlogin.getInitialProps = async ctx => {\n  const isServer = ctx.req ? 'server' : 'client';\n  return {\n    isServer\n  };\n};\n\nexport default login;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/admin/oscar/login.tsx"],"names":["loginEmail","getIsLogged","useSelector","useDispatch","useState","useRouter","login","isServer","dispatch","isLogged","state","loginUI","router","email","setEmail","password","setPassword","onChangeEmail","e","value","name","target","onChangePassword","onSumit","preventDefault","res","push","getInitialProps","ctx","req"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AAEA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAMA,MAAMC,KAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AACpD,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeP,WAAW,CAAEQ,KAAD,KAAuB;AACtDD,IAAAA,QAAQ,EAAEC,KAAK,CAACC,OAAN,CAAcF;AAD8B,GAAvB,CAAD,CAAhC;AAGA,QAAMG,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,aAAa,GAAIC,CAAD,IAA+B;AACnD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,QAAQ,CAACK,KAAD,CAAR;AACD,GAHD;;AAIA,QAAMG,gBAAgB,GAAIJ,CAAD,IAA+B;AACtD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAL,IAAAA,WAAW,CAACG,KAAD,CAAX;AACD,GAHD;;AAIA,QAAMI,OAAO,GAAG,MAAOL,CAAP,IAA8B;AAC5CA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMzB,UAAU,CAACa,KAAD,EAAQE,QAAR,CAA5B;;AACA,QAAIU,GAAJ,EAAS;AACPjB,MAAAA,QAAQ,CAACP,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAW,MAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ,EAAiB,GAAjB;AACD;AAEF,GARD;;AASA,SACE,4BACE,oBACE;AAAO,IAAA,QAAQ,EAAET,aAAjB;AAAgC,IAAA,KAAK,EAAEJ;AAAvC,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAES,gBAAjC;AAAmD,IAAA,KAAK,EAAEP;AAA1D,IAFF,CADF,EAKE;AAAQ,IAAA,OAAO,EAAEQ;AAAjB,KACGd,QAAQ,GAAG,MAAH,GAAY,KADvB,CALF,CADF;AAWD,CAtCD;;AAuCAH,KAAK,CAACqB,eAAN,GAAwB,MAAOC,GAAP,IAAgC;AACtD,QAAMrB,QAAQ,GAAGqB,GAAG,CAACC,GAAJ,GAAU,QAAV,GAAqB,QAAtC;AACA,SAAO;AAAEtB,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeD,KAAf","sourcesContent":["import { loginEmail } from \"../../../lib/Utils/utils\";\r\nimport { RootState } from \"../../../store/modules\";\r\nimport { getIsLogged } from '../../../store/modules/loginUI';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n\r\ntype loginProps = {\r\n  isServer: string;\r\n};\r\nconst login: NextPage = ({ isServer }: loginProps) => {\r\n  const dispatch = useDispatch();\r\n  const { isLogged } = useSelector((state: RootState) => ({\r\n    isLogged: state.loginUI.isLogged,\r\n  }))\r\n  const router = useRouter();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setEmail(value);\r\n  }\r\n  const onChangePassword = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setPassword(value);\r\n  }\r\n  const onSumit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const res = await loginEmail(email, password);\r\n    if (res) {\r\n      dispatch(getIsLogged(true));\r\n      router.push('/', '/');\r\n    }\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <form>\r\n        <input onChange={onChangeEmail} value={email} />\r\n        <input type=\"password\" onChange={onChangePassword} value={password} />\r\n      </form>\r\n      <button onClick={onSumit}>\r\n        {isLogged ? '로그아웃' : '로그인'}\r\n      </button>\r\n    </>\r\n  )\r\n}\r\nlogin.getInitialProps = async (ctx: NextPageContext) => {\r\n  const isServer = ctx.req ? 'server' : 'client';\r\n  return { isServer };\r\n};\r\n\r\nexport default login;"]},"metadata":{},"sourceType":"module"}