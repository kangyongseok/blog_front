{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nvar __jsx = React.createElement;\nimport React, { useRef, useCallback } from 'react';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Editor } from '../../components/Write';\nimport { getValue } from '../../store/modules/postUI';\nimport { ROUTES } from '../../lib/Routes/Routes';\nimport { removeExp } from '../../lib/Utils/utils';\nimport { postAsync } from '../../store/modules/post';\n\nvar WriteContainerTest = function WriteContainerTest(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var dispatch = useDispatch();\n  var mdRef = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postWrite: state.postUI.postWrite,\n      postsList: state.post.postsList\n    };\n  }),\n      postWrite = _useSelector.postWrite,\n      postsList = _useSelector.postsList;\n\n  var handleChange = useCallback(function (e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    dispatch(getValue({\n      name: name,\n      value: value\n    }));\n  }, [dispatch]);\n  var handleConv = useCallback(function (html) {\n    dispatch(getValue({\n      name: 'mdValue',\n      value: html\n    }));\n  }, [dispatch]);\n  var onUpload = useCallback(\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var uploadDate, title, inputValue, mdValue, imgUrl, subTitle, tagArr, withoutExp, dataForUpload;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uploadDate = new Date().toISOString();\n            title = postWrite.title, inputValue = postWrite.inputValue, mdValue = postWrite.mdValue, imgUrl = postWrite.imgUrl, subTitle = postWrite.subTitle, tagArr = postWrite.tagArr;\n            withoutExp = removeExp(inputValue);\n            dataForUpload = {\n              title: title,\n              rawContent: inputValue,\n              content: withoutExp,\n              contentMd: mdValue,\n              date: uploadDate,\n              imgUrl: imgUrl,\n              id: postsList.data[0].id + 1,\n              subTitle: subTitle,\n              tagArr: tagArr\n            };\n            _context.prev = 4;\n            dispatch(postAsync.request(dataForUpload));\n            Router.push(ROUTES.home, ROUTES.home, {\n              shallow: true\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](4);\n            throw _context.t0;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 9]]);\n  })), [dispatch, postWrite]); // useEffect(\n  // \t() => {\n  // \t\tmdRef.current.scrollTo(0, mdRef.current.scrollHeight);\n  // \t},\n  // \t[ postWrite.inputValue ]\n  // );\n  // useEffect(() => {\n  // \treturn () => {\n  // \t\tdispatch(resetInputValue());\n  // \t\tcheckUser();\n  // \t};\n  // }, []);\n\n  return __jsx(EditBox, null, __jsx(EditPart, null, __jsx(Editor, {\n    inputValue: postWrite.inputValue,\n    onChange: handleChange\n  })));\n};\n\nexport default WriteContainerTest;\nvar EditBox = styled.div.withConfig({\n  displayName: \"WriteContainerTest__EditBox\",\n  componentId: \"sc-1ww7q8q-0\"\n})([\"display:flex;height:94rem;justify-content:space-between;\"]);\nvar EditPart = styled.div.withConfig({\n  displayName: \"WriteContainerTest__EditPart\",\n  componentId: \"sc-1ww7q8q-1\"\n})([\"width:calc(50% - 1.6rem);\"]);","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/Write/WriteContainerTest.tsx"],"names":["React","useRef","useCallback","Router","styled","useSelector","useDispatch","Editor","getValue","ROUTES","removeExp","postAsync","WriteContainerTest","dispatch","mdRef","state","postWrite","postUI","postsList","post","handleChange","e","target","value","name","handleConv","html","onUpload","uploadDate","Date","toISOString","title","inputValue","mdValue","imgUrl","subTitle","tagArr","withoutExp","dataForUpload","rawContent","content","contentMd","date","id","data","request","push","home","shallow","EditBox","div","EditPart"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Editor, Head, Preview } from '../../components/Write';\r\nimport { RootState } from '../../store/modules';\r\nimport { getValue, resetInputValue, addTagArr } from '../../store/modules/postUI';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport { removeExp, checkUser } from '../../lib/Utils/utils';\r\nimport { Post, postAsync } from '../../store/modules/post';\r\nimport EditorHeaderContainer from '../Common/EditorHeaderContainer';\r\n\r\ntype WriteContainerProps = {};\r\n\r\nconst WriteContainerTest = ({}: WriteContainerProps) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst mdRef = useRef<HTMLDivElement>();\r\n\tconst { postWrite, postsList } = useSelector((state: RootState) => ({\r\n\t\tpostWrite: state.postUI.postWrite,\r\n    postsList: state.post.postsList,\r\n\t}));\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(e: React.ChangeEvent<any>) => {\r\n\t\t\tconst { value, name } = e.target;\r\n\t\t\tdispatch(getValue({ name, value }));\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n\r\n\tconst handleConv = useCallback(\r\n\t\t(html: string) => {\r\n\t\t\tdispatch(getValue({ name: 'mdValue', value: html }));\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n\r\n\tconst onUpload = useCallback(async () => {\r\n\t\tconst uploadDate = new Date().toISOString();\r\n\t\tconst { title, inputValue, mdValue, imgUrl, subTitle, tagArr} = postWrite\r\n\t\tconst withoutExp = removeExp(inputValue);\r\n\t\tconst dataForUpload: Post = {\r\n\t\t\ttitle: title,\r\n\t\t\trawContent: inputValue,\r\n\t\t\tcontent: withoutExp,\r\n\t\t\tcontentMd: mdValue,\r\n\t\t\tdate: uploadDate,\r\n\t\t\timgUrl: imgUrl,\r\n\t\t\tid: postsList.data[0].id + 1,\r\n       subTitle: subTitle,\r\n       tagArr: tagArr,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tdispatch(postAsync.request(dataForUpload));\r\n\t\t\tRouter.push(ROUTES.home, ROUTES.home, { shallow: true });\r\n\t\t} catch (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t},[ dispatch, postWrite ]\r\n\t);\r\n\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tmdRef.current.scrollTo(0, mdRef.current.scrollHeight);\r\n\t// \t},\r\n\t// \t[ postWrite.inputValue ]\r\n\t// );\r\n\r\n\t// useEffect(() => {\r\n\t// \treturn () => {\r\n\t// \t\tdispatch(resetInputValue());\r\n\t// \t\tcheckUser();\r\n\t// \t};\r\n\t// }, []);\r\n\treturn (\r\n\t\t<EditBox>\r\n\t\t\t<EditPart>\r\n\t\t\t\t{/* <EditorHeaderContainer \r\n          postWrite={postWrite}\r\n          onChange={handleChange}\r\n          onUpload={onUpload}\r\n        /> */}\r\n\t\t\t\t<Editor inputValue={postWrite.inputValue} onChange={handleChange} />\r\n\t\t\t</EditPart>\r\n\t\t\t{/* <Preview inputValue={postWrite.inputValue} mdRef={mdRef} onChange={handleConv} /> */}\r\n\t\t</EditBox>\r\n\t);\r\n};\r\n\r\nexport default WriteContainerTest;\r\nconst EditBox = styled.div`\r\n\tdisplay: flex;\r\n\theight: 94rem;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst EditPart = styled.div`width: calc(50% - 1.6rem);`;\r\n"]},"metadata":{},"sourceType":"module"}