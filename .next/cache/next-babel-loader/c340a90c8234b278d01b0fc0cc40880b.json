{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport firebase, { provider } from '../../config/init-firebase';\nexport var formatDate = function formatDate(dateData) {\n  var formatted = new Date(dateData);\n  var year = formatted.getFullYear();\n  var month = formatted.getMonth() + 1;\n  var day = formatted.getDate();\n  month = Number(month) < 10 ? \"0\".concat(month) : month;\n  day = Number(day) < 10 ? \"0\".concat(day) : day;\n  return \"\".concat(year, \"\\uB144 \").concat(month, \"\\uC6D4 \").concat(day, \"\\uC77C\");\n};\nexport var setItem = function setItem(key, obj) {\n  return sessionStorage.setItem(key, _JSON$stringify(obj));\n};\nexport var getItem = function getItem(key) {\n  return sessionStorage.getItem(JSON.parse(key));\n};\nexport var removeExp = function removeExp(str) {\n  var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n\n  if (regExp.test(str)) {\n    var result = str.replace(regExp, '');\n    return result;\n  }\n\n  return str;\n};\nexport var loginPopup = function loginPopup() {\n  firebase.auth().signInWithPopup(provider).then(function (result) {\n    var token = _JSON$stringify(result.credential.toJSON());\n\n    sessionStorage.setItem(\"idToken\", token);\n    return result.user;\n  })[\"catch\"](function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential; // ...\n  });\n};\nexport var logoutFn = function logoutFn() {\n  firebase.auth().signOut().then(function () {\n    // Sign-out successful.\n    sessionStorage.removeItem(\"idToken\");\n  })[\"catch\"](function (error) {// An error happened.\n  });\n};\nexport var checkUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return firebase.auth().currentUser;\n\n          case 2:\n            user = _context.sent;\n            return _context.abrupt(\"return\", user);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function checkUser() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var loginEmail = function loginEmail(email, password) {\n  var result = firebase.auth().signInWithEmailAndPassword(email, password).then(function (res) {\n    var token = _JSON$stringify(res.user);\n\n    sessionStorage.setItem(\"idToken\", token);\n    return res;\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n  return result;\n};","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/lib/Utils/utils.ts"],"names":["firebase","provider","formatDate","dateData","formatted","Date","year","getFullYear","month","getMonth","day","getDate","Number","setItem","key","obj","sessionStorage","getItem","JSON","parse","removeExp","str","regExp","test","result","replace","loginPopup","auth","signInWithPopup","then","token","credential","toJSON","user","error","errorCode","code","errorMessage","message","email","logoutFn","signOut","removeItem","checkUser","currentUser","loginEmail","password","signInWithEmailAndPassword","res","err","console","log"],"mappings":"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","sourcesContent":["import firebase, { provider } from '../../config/init-firebase';\r\n\r\nexport const formatDate = (dateData: string) => {\r\n  const formatted: Date = new Date(dateData);\r\n  const year: number = formatted.getFullYear();\r\n  let month: number | string = formatted.getMonth() + 1;\r\n  let day: number | string = formatted.getDate();\r\n  month = Number(month) < 10 ? `0${month}` : month;\r\n  day = Number(day) < 10 ? `0${day}` : day;\r\n\r\n  return `${year}년 ${month}월 ${day}일`;\r\n};  \r\n\r\nexport const setItem = (key: string, obj: object) => {\r\n  return sessionStorage.setItem(key, JSON.stringify(obj));\r\n};\r\n\r\nexport const getItem = (key: string) => {\r\n  return sessionStorage.getItem(JSON.parse(key));\r\n};\r\n\r\nexport const removeExp = (str: string) => {\r\n  const regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi\r\n  if(regExp.test(str)) {\r\n    const result = str.replace(regExp, '');\r\n    return result;\r\n  } return str;\r\n} \r\n\r\nexport const loginPopup = () => {\r\n  firebase.auth().signInWithPopup(provider).then(function(result) {\r\n    const token = JSON.stringify(result.credential.toJSON());\r\n    sessionStorage.setItem(\"idToken\", token);\r\n    return result.user\r\n  }).catch(function(error) {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The firebase.auth.AuthCredential type that was used.\r\n    const credential = error.credential;\r\n    // ...\r\n  });\r\n}\r\n\r\nexport const logoutFn = () => {\r\n  firebase.auth().signOut().then(function() {\r\n    // Sign-out successful.\r\n    sessionStorage.removeItem(\"idToken\");\r\n  }).catch(function(error) {\r\n    // An error happened.\r\n  });\r\n}\r\n\r\nexport const checkUser = async () => {\r\n  const user = await firebase.auth().currentUser;\r\n  return user;\r\n}\r\n\r\nexport const loginEmail = (email: string, password: string) => {\r\n  const result = firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((res) => {\r\n      const token = JSON.stringify(res.user);\r\n      sessionStorage.setItem(\"idToken\", token);\r\n      return res\r\n  }).catch(err =>  console.log(err));\r\n  return result;\r\n}"]},"metadata":{},"sourceType":"module"}