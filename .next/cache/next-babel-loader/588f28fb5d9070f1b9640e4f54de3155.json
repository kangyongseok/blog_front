{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { loginEmail } from \"../../../lib/Utils/utils\";\nimport { getIsLogged } from '../../../store/modules/loginUI';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nvar login = function login(_ref) {\n  var isServer = _ref.isServer;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      isLogged: state.loginUI.isLogged\n    };\n  }),\n      isLogged = _useSelector.isLogged;\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var onChangeEmail = function onChangeEmail(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    setEmail(value);\n  };\n\n  var onChangePassword = function onChangePassword(e) {\n    var _e$target2 = e.target,\n        value = _e$target2.value,\n        name = _e$target2.name;\n    setPassword(value);\n  };\n\n  var onSumit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return loginEmail(email, password);\n\n            case 3:\n              res = _context.sent;\n\n              if (res) {\n                dispatch(getIsLogged(true));\n                router.push('/', '/');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSumit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"input\", {\n    onChange: onChangeEmail,\n    value: email\n  }), __jsx(\"input\", {\n    type: \"password\",\n    onChange: onChangePassword,\n    value: password\n  })), __jsx(\"button\", {\n    onClick: onSumit\n  }, isLogged ? '로그아웃' : '로그인'));\n};\n\nlogin.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(ctx) {\n    var isServer;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            isServer = ctx.req ? 'server' : 'client';\n            return _context2.abrupt(\"return\", {\n              isServer: isServer\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default login;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/admin/oscar/login.tsx"],"names":["loginEmail","getIsLogged","useSelector","useDispatch","useState","useRouter","login","isServer","dispatch","state","isLogged","loginUI","router","email","setEmail","password","setPassword","onChangeEmail","e","target","value","name","onChangePassword","onSumit","preventDefault","res","push","getInitialProps","ctx","req"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AAEA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAMA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,OAA8B;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AACpD,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADoD,qBAE/BD,WAAW,CAAC,UAACO,KAAD;AAAA,WAAuB;AACtDC,MAAAA,QAAQ,EAAED,KAAK,CAACE,OAAN,CAAcD;AAD8B,KAAvB;AAAA,GAAD,CAFoB;AAAA,MAE5CA,QAF4C,gBAE5CA,QAF4C;;AAKpD,MAAME,MAAM,GAAGP,SAAS,EAAxB;;AALoD,kBAO1BD,QAAQ,CAAC,EAAD,CAPkB;AAAA,MAO7CS,KAP6C;AAAA,MAOtCC,QAPsC;;AAAA,mBAQpBV,QAAQ,CAAC,EAAD,CARY;AAAA,MAQ7CW,QAR6C;AAAA,MAQnCC,WARmC;;AAUpD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAA+B;AAAA,oBAC3BA,CAAC,CAACC,MADyB;AAAA,QAC3CC,KAD2C,aAC3CA,KAD2C;AAAA,QACpCC,IADoC,aACpCA,IADoC;AAEnDP,IAAAA,QAAQ,CAACM,KAAD,CAAR;AACD,GAHD;;AAIA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,CAAD,EAA+B;AAAA,qBAC9BA,CAAC,CAACC,MAD4B;AAAA,QAC9CC,KAD8C,cAC9CA,KAD8C;AAAA,QACvCC,IADuC,cACvCA,IADuC;AAEtDL,IAAAA,WAAW,CAACI,KAAD,CAAX;AACD,GAHD;;AAIA,MAAMG,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOL,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdA,cAAAA,CAAC,CAACM,cAAF;AADc;AAAA,qBAEIxB,UAAU,CAACa,KAAD,EAAQE,QAAR,CAFd;;AAAA;AAERU,cAAAA,GAFQ;;AAGd,kBAAIA,GAAJ,EAAS;AACPjB,gBAAAA,QAAQ,CAACP,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAW,gBAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ,EAAiB,GAAjB;AACD;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPH,OAAO;AAAA;AAAA;AAAA,KAAb;;AASA,SACE,4BACE,oBACE;AAAO,IAAA,QAAQ,EAAEN,aAAjB;AAAgC,IAAA,KAAK,EAAEJ;AAAvC,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAES,gBAAjC;AAAmD,IAAA,KAAK,EAAEP;AAA1D,IAFF,CADF,EAKE;AAAQ,IAAA,OAAO,EAAEQ;AAAjB,KACGb,QAAQ,GAAG,MAAH,GAAY,KADvB,CALF,CADF;AAWD,CAtCD;;AAuCAJ,KAAK,CAACqB,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBrB,YAAAA,QADgB,GACLqB,GAAG,CAACC,GAAJ,GAAU,QAAV,GAAqB,QADhB;AAAA,8CAEf;AAAEtB,cAAAA,QAAQ,EAARA;AAAF,aAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeD,KAAf","sourcesContent":["import { loginEmail } from \"../../../lib/Utils/utils\";\r\nimport { RootState } from \"../../../store/modules\";\r\nimport { getIsLogged } from '../../../store/modules/loginUI';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NextPage, NextPageContext } from \"next\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\n\r\ntype loginProps = {\r\n  isServer: string;\r\n};\r\nconst login: NextPage = ({ isServer }: loginProps) => {\r\n  const dispatch = useDispatch();\r\n  const { isLogged } = useSelector((state: RootState) => ({\r\n    isLogged: state.loginUI.isLogged,\r\n  }))\r\n  const router = useRouter();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setEmail(value);\r\n  }\r\n  const onChangePassword = (e: React.ChangeEvent<any>) => {\r\n    const { value, name } = e.target;\r\n    setPassword(value);\r\n  }\r\n  const onSumit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const res = await loginEmail(email, password);\r\n    if (res) {\r\n      dispatch(getIsLogged(true));\r\n      router.push('/', '/');\r\n    }\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <form>\r\n        <input onChange={onChangeEmail} value={email} />\r\n        <input type=\"password\" onChange={onChangePassword} value={password} />\r\n      </form>\r\n      <button onClick={onSumit}>\r\n        {isLogged ? '로그아웃' : '로그인'}\r\n      </button>\r\n    </>\r\n  )\r\n}\r\nlogin.getInitialProps = async (ctx: NextPageContext) => {\r\n  const isServer = ctx.req ? 'server' : 'client';\r\n  return { isServer };\r\n};\r\n\r\nexport default login;"]},"metadata":{},"sourceType":"module"}