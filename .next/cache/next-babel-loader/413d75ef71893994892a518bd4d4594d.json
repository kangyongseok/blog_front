{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport PostView from '../../components/Posts/PostView/PostView';\nimport { deletePostAsync } from '../../store/modules/post';\nimport Footer from '../../components/CommonUI/Footer';\nimport HeaderContainer from '../Header/HeaderContainer';\n\nvar BlogPostContainer = function BlogPostContainer(_ref) {\n  var editMode = _ref.editMode,\n      setEditMode = _ref.setEditMode;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postData: state.post.post,\n      isLogged: state.loginUI.isLogged\n    };\n  }),\n      postData = _useSelector.postData,\n      isLogged = _useSelector.isLogged;\n\n  var router = useRouter();\n  var reqDeletePost = useCallback(function () {\n    try {\n      dispatch(deletePostAsync.request(postData.data.resId)); // router ? Link .. ssr제대로 파악해서 routing\n\n      router.back();\n    } catch (e) {\n      throw e;\n    }\n  }, [dispatch]);\n  return __jsx(React.Fragment, null, __jsx(HeaderContainer, null), __jsx(PostView, {\n    isLogged: isLogged,\n    reqDeletePost: reqDeletePost,\n    postData: postData,\n    editMode: editMode,\n    setEditMode: setEditMode\n  }), __jsx(Footer, null));\n};\n\nexport default BlogPostContainer;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/containers/BlogPost/BlogPostContainer.tsx"],"names":["BlogPostContainer","editMode","setEditMode","dispatch","useDispatch","postData","isLogged","useSelector","state","router","useRouter","reqDeletePost","useCallback","deletePostAsync"],"mappings":";;AAAA,SAAA,WAAA,EAAA,WAAA,QAAA,aAAA;AACA,SAAA,WAAA,QAAA,OAAA;AACA,SAAA,SAAA,QAAA,aAAA;AACA,OAAA,QAAA,MAAA,0CAAA;AACA,SAAA,eAAA,QAAA,0BAAA;AACA,OAAA,MAAA,MAAA,kCAAA;AAEA,OAAA,eAAA,MAAA,2BAAA;;AAQA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAA8C;AAAA,MAA3CC,QAA2C,GAAA,IAAA,CAA3CA,QAA2C;AAAA,MAAjCC,WAAiC,GAAA,IAAA,CAAjCA,WAAiC;AACtE,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AADsE,MAAA,YAAA,GAEvCG,WAAW,CAAC,UAAA,KAAA,EAAA;AAAA,WAA0B;AACnEF,MAAAA,QAAQ,EAAEG,KAAK,CAALA,IAAAA,CADyD,IAAA;AAEnEF,MAAAA,QAAQ,EAAEE,KAAK,CAALA,OAAAA,CAAcF;AAF2C,KAA1B;AAF2B,GAE5B,CAF4B;AAAA,MAE9DD,QAF8D,GAAA,YAAA,CAAA,QAAA;AAAA,MAEpDC,QAFoD,GAAA,YAAA,CAAA,QAAA;;AAMtE,MAAMG,MAAM,GAAGC,SAAf,EAAA;AAEA,MAAMC,aAAa,GAAGC,WAAW,CAAC,YAAM;AACtC,QAAI;AACFT,MAAAA,QAAQ,CAACU,eAAe,CAAfA,OAAAA,CAAwBR,QAAQ,CAARA,IAAAA,CAD/B,KACOQ,CAAD,CAARV,CADE,CAEF;;AACAM,MAAAA,MAAM,CAANA,IAAAA;AAHF,KAAA,CAIE,OAAA,CAAA,EAAU;AACV,YAAA,CAAA;AACD;AAP8B,GAAA,EAQ9B,CARH,QAQG,CAR8B,CAAjC;AAUA,SACE,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,eAAA,EADF,IACE,CADF,EAEE,KAAA,CAAA,QAAA,EAAA;AACE,IAAA,QAAQ,EADV,QAAA;AAEE,IAAA,aAAa,EAFf,aAAA;AAGE,IAAA,QAAQ,EAHV,QAAA;AAIE,IAAA,QAAQ,EAJV,QAAA;AAKE,IAAA,WAAW,EAAEP;AALf,GAAA,CAFF,EASE,KAAA,CAAA,MAAA,EAVJ,IAUI,CATF,CADF;AAlBF,CAAA;;AAiCA,eAAA,iBAAA","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { useCallback, Dispatch, SetStateAction } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport PostView from '../../components/Posts/PostView/PostView';\r\nimport { deletePostAsync } from '../../store/modules/post';\r\nimport Footer from '../../components/CommonUI/Footer';\r\nimport { ROUTES } from '../../lib/Routes/Routes';\r\nimport HeaderContainer from '../Header/HeaderContainer';\r\nimport { RootState } from '../../store/modules';\r\nimport { setInputValues } from '../../store/modules/postUI';\r\n\r\ntype BlogPostProps = {\r\n  editMode: boolean;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>; \r\n};\r\nconst BlogPostContainer = ({ editMode, setEditMode }: BlogPostProps) => {\r\n  const dispatch = useDispatch();\r\n  const { postData, isLogged } = useSelector(( state : RootState ) => ({\r\n    postData: state.post.post,\r\n    isLogged: state.loginUI.isLogged\r\n  }))\r\n  const router = useRouter();\r\n\r\n  const reqDeletePost = useCallback(() => {\r\n    try {\r\n      dispatch(deletePostAsync.request(postData.data.resId));\r\n      // router ? Link .. ssr제대로 파악해서 routing\r\n      router.back();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <PostView \r\n        isLogged={isLogged} \r\n        reqDeletePost={reqDeletePost} \r\n        postData={postData} \r\n        editMode={editMode} \r\n        setEditMode={setEditMode} \r\n      />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogPostContainer;"]},"metadata":{},"sourceType":"module"}