{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport { getPostAsync } from '../../../store/modules/post';\nimport Maybe from '../../../components/Maybe/Maybe';\nimport BlogPostContainer from '../../../containers/BlogPost/BlogPostContainer';\nimport { useSelector } from 'react-redux';\nimport EditContainer from '../../../containers/Edit/EditContainer';\n\nvar post = function post(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      editMode = _useState[0],\n      setEditMode = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      postData: state.post.post\n    };\n  }),\n      postData = _useSelector.postData;\n\n  var data = postData.data;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, data.res.title), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  })), __jsx(Maybe, {\n    isVisible: editMode\n  }, __jsx(EditContainer, {\n    editMode: editMode\n  })), __jsx(Maybe, {\n    isVisible: !editMode\n  }, __jsx(BlogPostContainer, {\n    editMode: editMode,\n    setEditMode: setEditMode\n  })));\n};\n\npost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var store, isServer, query, id;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref2.store, isServer = _ref2.isServer, query = _ref2.query;\n            id = query.id;\n\n            if (!isServer) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 5;\n            return store.dispatch(getPostAsync.request(id));\n\n          case 5:\n            return _context.abrupt(\"return\", {});\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default post;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/dev/blog/[id].tsx"],"names":["useState","Head","getPostAsync","Maybe","BlogPostContainer","useSelector","EditContainer","post","editMode","setEditMode","state","postData","data","res","title","getInitialProps","store","isServer","query","id","dispatch","request"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAGA,IAAMC,IAAoB,GAAG,SAAvBA,IAAuB,OAAkB;AAAA;;AAAA,kBACbP,QAAQ,CAAU,KAAV,CADK;AAAA,MACtCQ,QADsC;AAAA,MAC5BC,WAD4B;;AAAA,qBAExBJ,WAAW,CAAC,UAAEK,KAAF;AAAA,WAA0B;AACzDC,MAAAA,QAAQ,EAAED,KAAK,CAACH,IAAN,CAAWA;AADoC,KAA1B;AAAA,GAAD,CAFa;AAAA,MAErCI,QAFqC,gBAErCA,QAFqC;;AAAA,MAKrCC,IALqC,GAK5BD,QAL4B,CAKrCC,IALqC;AAM7C,SACE,4BACE,MAAC,IAAD,QACE,qBAAQA,IAAI,CAACC,GAAL,CAASC,KAAjB,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAFF,CADF,EAKE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEN;AAAlB,KACE,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEA;AAAzB,IADF,CALF,EAQE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAACA;AAAnB,KACE,MAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEA,QAA7B;AAAuC,IAAA,WAAW,EAAEC;AAApD,IADF,CARF,CADF;AAcD,CApBD;;AAsBAF,IAAI,CAACQ,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT,EAAgBC,QAAhB,SAAgBA,QAAhB,EAA0BC,KAA1B,SAA0BA,KAA1B;AACbC,YAAAA,EADa,GACND,KADM,CACbC,EADa;;AAAA,iBAElBF,QAFkB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGbD,KAAK,CAACI,QAAN,CAAelB,YAAY,CAACmB,OAAb,CAAqBF,EAArB,CAAf,CAHa;;AAAA;AAAA,6CAKd,EALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeZ,IAAf","sourcesContent":["\r\nimport { useState } from 'react';\r\nimport Head from 'next/head'\r\nimport { getPostAsync } from '../../../store/modules/post';\r\nimport Maybe from '../../../components/Maybe/Maybe';\r\nimport BlogPostContainer from '../../../containers/BlogPost/BlogPostContainer';\r\nimport { NextPageCustom, nextPageProps } from '../../../lib/types/nextCustomTypes';\r\nimport { RootState } from '../../../store/modules';\r\nimport { useSelector } from 'react-redux';\r\nimport EditContainer from '../../../containers/Edit/EditContainer';\r\n\r\ntype blogType = {};\r\nconst post: NextPageCustom = ({}: blogType) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { postData } = useSelector(( state : RootState ) => ({\r\n    postData: state.post.post\r\n  }))\r\n  const { data } = postData;\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{data.res.title}</title>\r\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n      </Head>\r\n      <Maybe isVisible={editMode}>\r\n        <EditContainer editMode={editMode} />\r\n      </Maybe>\r\n      <Maybe isVisible={!editMode}>\r\n        <BlogPostContainer editMode={editMode} setEditMode={setEditMode} />\r\n      </Maybe>\r\n    </>\r\n  );\r\n};\r\n\r\npost.getInitialProps = async ({ store, isServer, query  }: nextPageProps) => {\r\n  const { id } = query;\r\n  if(isServer) {\r\n    await store.dispatch(getPostAsync.request(id as string));\r\n  }\r\n  return { };\r\n};\r\n\r\nexport default post;"]},"metadata":{},"sourceType":"module"}