{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport { getPostAsync } from '../../../store/modules/post';\nimport Maybe from '../../../components/Maybe/Maybe';\nimport BlogPostContainer from '../../../containers/BlogPost/BlogPostContainer';\nimport { useSelector } from 'react-redux';\nimport EditContainer from '../../../containers/Edit/EditContainer';\n\nconst post = ({}) => {\n  const {\n    0: editMode,\n    1: setEditMode\n  } = useState(false);\n  const {\n    postData\n  } = useSelector(state => ({\n    postData: state.post.post\n  }));\n  const {\n    data\n  } = postData;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, data.res.title), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  })), __jsx(Maybe, {\n    isVisible: editMode\n  }, __jsx(EditContainer, {\n    editMode: editMode\n  })), __jsx(Maybe, {\n    isVisible: !editMode\n  }, __jsx(BlogPostContainer, {\n    editMode: editMode,\n    setEditMode: setEditMode\n  })));\n};\n\npost.getInitialProps = async ({\n  store,\n  isServer,\n  query\n}) => {\n  const {\n    id\n  } = query;\n\n  if (isServer) {\n    await store.dispatch(getPostAsync.request(id));\n  }\n\n  return {};\n};\n\nexport default post;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/dev/blog/[id].tsx"],"names":["useState","Head","getPostAsync","Maybe","BlogPostContainer","useSelector","EditContainer","post","editMode","setEditMode","postData","state","data","res","title","getInitialProps","store","isServer","query","id","dispatch","request"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,iBAAP,MAA8B,gDAA9B;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAGA,MAAMC,IAAoB,GAAG,CAAC,EAAD,KAAkB;AAC7C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeL,WAAW,CAAGM,KAAF,KAA0B;AACzDD,IAAAA,QAAQ,EAAEC,KAAK,CAACJ,IAAN,CAAWA;AADoC,GAA1B,CAAD,CAAhC;AAGA,QAAM;AAAEK,IAAAA;AAAF,MAAWF,QAAjB;AACA,SACE,4BACE,MAAC,IAAD,QACE,qBAAQE,IAAI,CAACC,GAAL,CAASC,KAAjB,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAFF,CADF,EAKE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEN;AAAlB,KACE,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEA;AAAzB,IADF,CALF,EAQE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAACA;AAAnB,KACE,MAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEA,QAA7B;AAAuC,IAAA,WAAW,EAAEC;AAApD,IADF,CARF,CADF;AAcD,CApBD;;AAsBAF,IAAI,CAACQ,eAAL,GAAuB,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAP,KAAsD;AAC3E,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAf;;AACA,MAAGD,QAAH,EAAa;AACX,UAAMD,KAAK,CAACI,QAAN,CAAelB,YAAY,CAACmB,OAAb,CAAqBF,EAArB,CAAf,CAAN;AACD;;AACD,SAAO,EAAP;AACD,CAND;;AAQA,eAAeZ,IAAf","sourcesContent":["\r\nimport { useState } from 'react';\r\nimport Head from 'next/head'\r\nimport { getPostAsync } from '../../../store/modules/post';\r\nimport Maybe from '../../../components/Maybe/Maybe';\r\nimport BlogPostContainer from '../../../containers/BlogPost/BlogPostContainer';\r\nimport { NextPageCustom, nextPageProps } from '../../../lib/types/nextCustomTypes';\r\nimport { RootState } from '../../../store/modules';\r\nimport { useSelector } from 'react-redux';\r\nimport EditContainer from '../../../containers/Edit/EditContainer';\r\n\r\ntype blogType = {};\r\nconst post: NextPageCustom = ({}: blogType) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { postData } = useSelector(( state : RootState ) => ({\r\n    postData: state.post.post\r\n  }))\r\n  const { data } = postData;\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{data.res.title}</title>\r\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n      </Head>\r\n      <Maybe isVisible={editMode}>\r\n        <EditContainer editMode={editMode} />\r\n      </Maybe>\r\n      <Maybe isVisible={!editMode}>\r\n        <BlogPostContainer editMode={editMode} setEditMode={setEditMode} />\r\n      </Maybe>\r\n    </>\r\n  );\r\n};\r\n\r\npost.getInitialProps = async ({ store, isServer, query  }: nextPageProps) => {\r\n  const { id } = query;\r\n  if(isServer) {\r\n    await store.dispatch(getPostAsync.request(id as string));\r\n  }\r\n  return { };\r\n};\r\n\r\nexport default post;"]},"metadata":{},"sourceType":"module"}