{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getPostsListAsync } from '../store/modules/post';\nimport HeaderContainer from '../containers/Header/HeaderContainer';\nimport PostListContainer from '../containers/Post/PostListContainer';\nimport { checkUser } from '../lib/Utils/utils';\nimport { useEffect } from 'react';\n\nvar Home = function Home() {\n  useEffect(function () {\n    console.log('index [useeffect]');\n    checkUser();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(HeaderContainer, null), __jsx(PostListContainer, null));\n};\n\nHome.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var store, isServer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref.store, isServer = _ref.isServer;\n\n            if (!isServer) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return checkUser();\n\n          case 4:\n            console.log('home');\n            _context.next = 7;\n            return store.dispatch(getPostsListAsync.request(30));\n\n          case 7:\n            return _context.abrupt(\"return\", {});\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/lchon/Project/blog_front/pages/index.tsx"],"names":["Home","useEffect","console","checkUser","store","isServer","getPostsListAsync"],"mappings":";;;;AAAA,SAAA,iBAAA,QAAA,uBAAA;AACA,OAAA,eAAA,MAAA,sCAAA;AAKA,OAAA,iBAAA,MAAA,sCAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AACA,SAAA,SAAA,QAAA,OAAA;;AAEA,IAAMA,IAAoB,GAAG,SAAvBA,IAAuB,GAAM;AAEjCC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,mBAAAA;AACAC,IAAAA,SAAS;AAFF,GAAA,EAATF,EAAS,CAATA;AAIA,SACA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,eAAA,EADF,IACE,CADF,EAEE,KAAA,CAAA,iBAAA,EAHF,IAGE,CAFF,CADA;AANF,CAAA;;AAaAD,IAAI,CAAJA,eAAAA;AAAAA;AAAAA,YAAAA;AAAAA,MAAAA,KAAAA,GAAAA,iBAAAA;AAAAA;AAAAA,EAAAA,mBAAAA,CAAAA,IAAAA,CAAuB,SAAA,OAAA,CAAA,IAAA,EAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,WAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,eAAA,CAAA;AAASI,YAAAA,KAAT,GAAA,IAAA,CAAA,KAASA,EAAOC,QAAhB,GAAA,IAAA,CAAA,QAASD;;AAAT,gBAAA,CAAA,QAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;AAAA;;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,mBAEbD,SAFa,EAAA;;AAAA,eAAA,CAAA;AAGnBD,YAAAA,OAAO,CAAPA,GAAAA,CAAAA,MAAAA;AAHmB,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,mBAIbE,KAAK,CAALA,QAAAA,CAAeE,iBAAiB,CAAjBA,OAAAA,CAJF,EAIEA,CAAfF,CAJa;;AAAA,eAAA,CAAA;AAAA,mBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAA,EAAA,CAAA;;AAAA,eAAA,CAAA;AAAA,eAAA,KAAA;AAAA,mBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,EAAA,OAAA,CAAA;AAAvBJ,GAAAA,CAAAA,CAAAA;;AAAAA,SAAAA,UAAAA,EAAAA,EAAAA;AAAAA,WAAAA,KAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,SAAAA,CAAAA;AAAAA,GAAAA;AAAAA,CAAAA,EAAAA;;AAQA,eAAA,IAAA","sourcesContent":["import { getPostsListAsync } from '../store/modules/post';\r\nimport HeaderContainer from '../containers/Header/HeaderContainer';\r\nimport { RootState } from '../store/modules';\r\nimport { NextPageCustom } from '../lib/types/nextCustomTypes';\r\nimport { useSelector } from 'react-redux';\r\nimport LoadingPost from '../components/Posts/Post/LoadingPost';\r\nimport PostListContainer from '../containers/Post/PostListContainer';\r\nimport { checkUser } from '../lib/Utils/utils';\r\nimport { useEffect } from 'react';\r\n\r\nconst Home: NextPageCustom = () => {\r\n  \r\n  useEffect(() => {\r\n    console.log('index [useeffect]')\r\n    checkUser();\r\n  }, [])\r\n  return (\r\n  <>\r\n    <HeaderContainer />\r\n    <PostListContainer />\r\n  </>\r\n)};\r\n\r\nHome.getInitialProps = async ({ store, isServer }) => {\r\n  if(isServer) {\r\n    await checkUser();\r\n    console.log('home');\r\n    await store.dispatch(getPostsListAsync.request(30));\r\n  }\r\n  return { };\r\n};\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}